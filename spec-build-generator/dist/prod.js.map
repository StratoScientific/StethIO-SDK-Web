{"version":3,"file":"prod.js","mappings":"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CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,GAAI,IAAK,IACf,CAAC,IAAK,GAAI,IAAK,IACf,CAAC,IAAK,GAAI,IAAK,IACf,CAAC,IAAK,GAAI,IAAK,IACf,CAAC,IAAK,GAAI,IAAK,IACf,CAAC,IAAK,GAAI,IAAK,IACf,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,GAAI,IAAK,IACd,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,MAKhBxV,KAAKwV,OAAS,CACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,IAAK,IAAK,IAAK,GAChB,CAAC,IAAK,IAAK,IAAK,GAChB,CAAC,IAAK,IAAK,IAAK,GAChB,CAAC,IAAK,IAAK,IAAK,GAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,IACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,OAgExBlD,EAAmBnS,UAAUsW,SAAW,WACpCzW,KAAK2V,WACD3V,KAAK2V,UAAY3V,KAAKwU,QACtBxU,KAAK2V,SAAW,IAGxBrD,EAAmBnS,UAAUuW,gBAAkB,WAE3C,IAAIC,EAAS3W,KAAK4W,mBAClB5W,KAAK6W,oBAEL,IAAIL,EAAO5Q,aAAaC,QAAQ,oBAE1B2Q,GAAQxW,KAAK6E,WAAuB,UAAT2R,IAC7BxW,KAAK8W,cAAcH,GAIvB3W,KAAK8V,QAAU9V,KAAK0U,SACpB,IAAIqC,EAAUC,KAAKC,MAAQjX,KAAK+V,YAAe/V,KAAK8V,OACpD,GAAI9V,KAAK6V,QAAS,CACd,IAAIqB,EAASlX,KACbA,KAAK4V,QAAUuB,YAAW,WACtBD,EAAOR,oBACR1W,KAAK0U,SAAWqC,KAG3BzE,EAAmBnS,UAAUyW,iBAAmB,WAC5C5W,KAAK4U,iBAAiBzK,aAAasC,sBAAsBzM,KAAK4U,iBAAiBnD,eAG/E,IAAIkF,EAAS3W,KAAK4U,iBAAiBtB,oBAInC,OAHAtT,KAAK4U,iBAAiBlC,eACtB1S,KAAK4U,iBAAiB9B,6BACtB9S,KAAK4U,iBAAiBpB,gCACfmD,GAKXrE,EAAmBnS,UAAU2W,cAAgB,SAAUH,GAEnD,IAAIS,EAAQpX,KAAK4U,iBAAiB1C,YAAc,EAC5CmF,EAASrX,KAAK4U,iBAAiBxC,aAAe,EAC9C0B,EAAQuD,EAASV,EAAO,GAAKS,EAC7BE,EAAMD,EAASV,EAAO,GAAKS,EAC3BE,EAAMxD,EAAQ,IACdwD,EAAMxD,EAAQ,GAelB,IAAIyD,EAAQvX,KAAKsU,aAAakD,yBAC9BxX,KAAKsU,aAAakD,yBAA2B,cAC7CxX,KAAKsU,aAAamD,YAClBzX,KAAKsU,aAAaoD,UAAU,GAAK,GACjC1X,KAAKsU,aAAaqD,OAAO,EAAG7D,GAC5B9T,KAAKsU,aAAasD,OAAO,EAAGN,GAC5BtX,KAAKsU,aAAauD,SAClB7X,KAAKsU,aAAakD,yBAA2BD,EAC7CvX,KAAKsU,aAAa7B,kBAEtBH,EAAmBnS,UAAU2X,cAAgB,SAAUC,GAC/CC,MAAMD,IAAYA,EAAU,IAAMA,EAAU,EAC5CxX,QAAQ0X,MAAM,oDAGG,IAAZF,EACL/X,KAAKyU,SAAW,GAGhBzU,KAAKyU,SAAWsD,EAChB/X,KAAK0U,SAAW,IAAO1U,KAAKyU,WAGpCnC,EAAmBnS,UAAU8V,YAAc,SAAUiC,EAAcrY,GAC/D,GAA6B,iBAAjBqY,QAAyChI,IAAVrQ,EAG3C,OAAQqY,EAAaC,eACjB,IAAK,WACDnY,KAAK8X,cAAcjY,GACnB,MACJ,IAAK,YACImY,MAAMnY,IAAUA,EAAQ,IACzBG,KAAK2U,SAAW9U,GAEpB,MACJ,IAAK,mBACoB,iBAAVA,GAAsBiS,SAASC,eAAelS,KACrDG,KAAKgW,UAAYnW,GAErB,MACJ,IAAK,WACD,GAAIuY,MAAMC,QAAQxY,IAAUuY,MAAMC,QAAQxY,EAAM,KAA0B,GAAnBA,EAAM,GAAGe,SAC5DZ,KAAKwV,OAAS3V,EACVG,KAAKwV,OAAO5U,OAAS,KACrB,IAAK,IAAID,EAAIX,KAAKwV,OAAO5U,OAAQD,EAAI,IAAKA,IACtCX,KAAKwV,OAAO7U,GAAKX,KAAKwV,OAAOxV,KAAKwV,OAAO5U,OAAS,KAU1E0R,EAAmBnS,UAAU0W,kBAAoB,WAC7C,IAAgBzB,EAEZA,EADApV,KAAKgU,SAAS,GAAGsE,cAAgB9G,WACxByD,kBAAkBsD,KAAKvY,KAAKgU,SAAS,IAGrChU,KAAKgU,SAAS,GAE3BhU,KAAKsU,aAAakD,yBAA2B,OAC7CxX,KAAKsU,aAAatD,uBAAwB,EAC1ChR,KAAKsU,aAAarD,UAAUjR,KAAKsU,aAAazC,OAAQ,EAAG,GACzD7R,KAAKsU,aAAakD,yBAA2B,cAC7C,IAAK,IAAgBgB,OAAS,EAAQC,OAAO,EAAwBC,EAAQ,EAAGA,EAAQ1Y,KAAKwU,MAAOkE,IAChGF,EAASpD,EAAOsD,EAAQ,KAAO,EAC/BD,EAAOzY,KAAKwV,OAAOgD,GAInBxY,KAAK2Y,mBAAmBF,EAAMC,EANhB,GAclB1Y,KAAKsU,aAAasE,aAAa5Y,KAAKkV,gBAAiB,EAAGlV,KAAK2V,WAEjErD,EAAmBnS,UAAUwY,mBAAqB,SAAUF,EAAMC,EAAOrB,GAGrE,IAAIwB,EAAS,GAAM7Y,KAAKwU,MAAQ,EAAKkE,GAAUrB,EAC/CrX,KAAKgV,aAAa6D,GAASJ,EAAK,GAChCzY,KAAKgV,aAAa6D,EAAQ,GAAKJ,EAAK,GACpCzY,KAAKgV,aAAa6D,EAAQ,GAAKJ,EAAK,GAEpC,IAAIjC,EAAO5Q,aAAaC,QAAQ,kBAE5B7F,KAAKgV,aAAa6D,EAAQ,GADjB,SAATrC,EAC+B,GAGAiC,EAAK,IAa5CnG,EAAmBnS,UAAU2Y,MAAQ,WACjC9Y,KAAKsU,aAAasE,aAAa5Y,KAAK0V,aAAc,EAAG,IAEzDpD,EAAmBnS,UAAU2T,MAAQ,WACjC9T,KAAK+V,YAAciB,KAAKC,MACxBjX,KAAK8V,OAAS,EACd9V,KAAK6V,SAAU,EACf7V,KAAK0W,mBAETpE,EAAmBnS,UAAU2I,KAAO,WAChC9I,KAAK6V,SAAU,EACX7V,KAAK4V,SACLmD,aAAa/Y,KAAK4V,SAGtB5V,KAAK2V,SAAW,GAEbrD,EAt0B4B,KCtMnC0G,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBhJ,IAAjBiJ,EACH,OAAOA,EAAavZ,QAGrB,IAAIwZ,EAASJ,EAAyBE,GAAY,CAGjDtZ,QAAS,IAOV,OAHAyZ,EAAoBH,GAAUvV,KAAKyV,EAAOxZ,QAASwZ,EAAQA,EAAOxZ,QAASqZ,GAGpEG,EAAOxZ,QClBWqZ,CAAoB,M","sources":["webpack://sample/./src/audio-decoder.ts","webpack://sample/./src/audio-encoder.ts","webpack://sample/./src/audio-engine.ts","webpack://sample/./src/main.ts","webpack://sample/./src/spectrogram.ts","webpack://sample/webpack/bootstrap","webpack://sample/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioDecoder = void 0;\n//https://kazuki.github.io/opus.js-sample/test.js\nvar AudioDecoder = (function () {\n    function AudioDecoder(path) {\n        this.worker = new Worker(path);\n    }\n    AudioDecoder.prototype.setup = function (cfg, packets) {\n        console.log('audio decoder setup called');\n        var _this = this;\n        var transfer_list = [];\n        for (var i = 0; i < packets.length; ++i)\n            transfer_list.push(packets[i].data);\n        return new Promise(function (resolve, reject) {\n            _this.worker.onmessage = function (ev) {\n                if (ev.data.status !== 0) {\n                    console.log('audio decoder failed to set up');\n                    console.log(ev);\n                    reject(ev.data);\n                    return;\n                }\n                console.log('audio decoder setup ok');\n                resolve(ev.data);\n            };\n            _this.worker.postMessage({\n                config: cfg,\n                packets: packets\n            }, transfer_list);\n        });\n    };\n    AudioDecoder.prototype.decode = function (packet) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.worker.onmessage = function (ev) {\n                if (ev.data.status !== 0) {\n                    reject(ev.data);\n                    return;\n                }\n                resolve(ev.data);\n            };\n            _this.worker.postMessage(packet, [packet.data]);\n        });\n    };\n    return AudioDecoder;\n})();\nexports.AudioDecoder = AudioDecoder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioEncoder = void 0;\nvar AudioEncoder = (function () {\n    function AudioEncoder(path) {\n        this.worker = new Worker(path);\n    }\n    AudioEncoder.prototype.setup = function (cfg) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.worker.onmessage = function (ev) {\n                if (ev.data.status !== 0) {\n                    console.log(ev);\n                    reject(ev.data);\n                    return;\n                }\n                console.log('audio encoder setup ok');\n                resolve(ev.data.packets);\n            };\n            _this.worker.postMessage(cfg);\n        });\n    };\n    AudioEncoder.prototype.encode = function (data) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.worker.onmessage = function (ev) {\n                if (ev.data.status !== 0) {\n                    reject(ev.data);\n                    return;\n                }\n                resolve(ev.data.packets);\n            };\n            _this.worker.postMessage(data);\n        });\n    };\n    return AudioEncoder;\n})();\nexports.AudioEncoder = AudioEncoder;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// create a microphone node\n// attach to context, etc.\n// start processor\n// import { puckJson } from './puck';\nvar audio_decoder_1 = require(\"./audio-decoder\");\nvar audio_encoder_1 = require(\"./audio-encoder\");\nvar spectrogram_1 = require(\"./spectrogram\");\n// Overall operation:\n// We use the AudioWorkletProcessor which as of this writing is only available in Chrome - (eg android and desktop, Samsung phones)\n// The nice thing is that our SocketWorkletProcessor gets the data in a background thread and thus is immune to hiccups on the main thread.\n// Everytime it gets a piece of data (128 samples) it passes them onto the main thread - here to this file\n//  AudioEngine gets a 128 sample packet, then adds it to a queue of packets to deal with.\n// These packets are encoded into Opus data (in another thread), and once encoded, we send the data via websocket to our\n// server. This server plays with the audio, and returns it via websocket to handleSocketMessage.\n// handleSocketMessage then adds these opus encoded buffers to be decoded (one at a time is important).\n// When the Opus encoded buffer is turned into Float32 samples, these are passed to the SocketWorkletProcessor which stores them in a ring buffer. They are then output into the process() callback on the SocketWorkletProcessor.\n// Another way?\n// perhaps simpler to use this to record and send to server: https://jsbin.com/hedujihuqo/edit?js,console (not ios it seems)\n// and then stream from the server an opus stream?\nvar AudioEngine = /** @class */ (function () {\n    function AudioEngine(divID) {\n        var _this = this;\n        this.lowAudioFlag = 0;\n        this.filterFunctions = {};\n        this.decodedPackets = [];\n        this.kAudioFrequencyExact = 44100.0;\n        this.importObject = {\n            imports: {\n                imported_func: function (arg) {\n                    console.log(arg);\n                },\n                wasi_unstable: function () { }\n            }\n        };\n        // data coming back on websockets via the server, as encoded Opus packets\n        // not currently used in StethIO\n        this.audioInput = function (arrayBuffer, heartMode) {\n            if (heartMode === void 0) { heartMode = true; }\n            // arrayBuffer = arrayBuffer.slice(); // duplicate since I don't know who owns this, and I am sending it to be encoded in a worker thread\n            _this.totalBytesIn += arrayBuffer.byteLength;\n            // console.log(\"Worlet bytes from socket: \" + arrayBuffer.byteLength);\n            // we need to pass the decoder an object with a data member as an ArrayBuffer,\n            if (_this.decoder == null) {\n                // this is an async call. So we need to store packets that come in after\n                _this.decoderOperational = false;\n                _this.packetsToDecode = [];\n                _this.loadOpusDecoder().then(function () {\n                    _this.decoderOperational = true;\n                }, function (info) { console.log('decoder.decode error'); });\n                return;\n            }\n            // add the packet to the queue\n            var packet = { data: arrayBuffer };\n            _this.packetsToDecode.push(packet);\n            if (!_this.decoderOperational && _this.packetsToDecode.length < 3) {\n                return;\n            }\n            // console.log(\"this.packetsToDecode: \",this.packetsToDecode);\n            // This call does things in order.\n            _this.decodePackets(heartMode);\n        };\n        // To test with already exsisting decoded audio array\n        this.testAudioInput = function (arrayBuffer, heartMode) {\n            if (heartMode === void 0) { heartMode = true; }\n            if (_this.socketWorkletNode) {\n                _this.socketWorkletNode.port.postMessage({\n                    type: 'samples', samples: arrayBuffer,\n                    heartMode: heartMode,\n                    gain: (heartMode) ? localStorage.getItem('heartGain') : localStorage.getItem('lungGain')\n                });\n            }\n        };\n        this.handleWorkletProcessorMessage = function (event) {\n            console.log('At handle events: ', event.data.outputs);\n            _this.socketWorkletNode.port.postMessage({\n                type: 'live',\n                outputs: event.data.outputs\n            });\n        };\n        // we get called when the worklet has a sample buffer.\n        // here we are using Opus to encode (compress) the audio.\n        this.old_handleWorkletProcessorMessage = function (event) {\n            console.log('handleWorkletProcessorMessage: ', event);\n            // console.log('[Worklet system got :Received] num samples: ' + event.data.samples.length);\n            // handled on server now AudioUtils.adjustMicGain(event.data.samples, desiredAverageInput);\n            // We might want to do feedback detection here. Chrome on mac has problems, all phones seem to do a great job,\n            // safari mac does fine. (safari does not use this audio path as of early 2020)\n            if (_this.feedbackGain !== 1.0) {\n                for (var i = 0; i < event.data.samples.length; i++) {\n                    event.data.samples[i] = event.data.samples[i] * _this.feedbackGain;\n                }\n            }\n            _this.buffersToEncode.push(event.data.samples);\n            _this.queueBufferForEncodingAndSend();\n        };\n        this.audioContext = null;\n        this.micStream = null;\n        this.micSourceNode = null;\n        this.encoder = null;\n        this.decoder = null;\n        this.socketWorkletNode = null;\n        this.totalBytesIn = 0;\n        this.totalSamplesIn = 0;\n        this.totalBytesSent = 0;\n        this.decoderOperational = false;\n        this.packetsToDecode = [];\n        this.decodingPackets = false;\n        this.encodingBuffers = false;\n        this.buffersToEncode = [];\n        this.analyser = null;\n        this.analyserBufferSize = 128;\n        this.analyserData = null;\n        this.feedbackGain = 1.0;\n        this.refreshTimer = 0;\n        this.divID = divID;\n        this.lowAudioFlag = 0;\n    }\n    // start the audio chain.\n    AudioEngine.prototype.startIt = function (liveInput, heartMode) {\n        if (heartMode === void 0) { heartMode = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // TODO: {sampleRate: 16000}\n                        this.audioContext = new AudioContext({ sampleRate: 16000 });\n                        return [4 /*yield*/, this.initiliseFilter(true)];\n                    case 1:\n                        _a.sent();\n                        /* Setting up audio filters variables */\n                        this.biquadFilter = this.audioContext.createBiquadFilter();\n                        this.distortion = this.audioContext.createWaveShaper();\n                        this.gainNode = this.audioContext.createGain();\n                        this.convolver = this.audioContext.createConvolver();\n                        return [4 /*yield*/, this.audioContext.audioWorklet.addModule('./steth-worklet-processor.js')];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, this.onModuleAdded(liveInput, heartMode)];\n                }\n            });\n        });\n    };\n    /* Initialse the audio filter function */\n    AudioEngine.prototype.initiliseFilter = function (audioType) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    AudioEngine.prototype.pause = function () {\n        this.spectrogramDrawer.haltDisplay();\n        this.socketWorkletNode.port.postMessage({\n            type: 'setState', state: 'kPause',\n            filterFunctions: JSON.stringify(this.filterFunctions),\n            newAudioFilter: this.newAudioFilter\n        });\n    };\n    AudioEngine.prototype.resume = function () {\n        // Todo\n    };\n    AudioEngine.prototype.close = function () {\n        if (this.spectrogramDrawer) {\n            this.spectrogramDrawer.haltDisplay();\n        }\n        if (this.micStream) {\n            for (var _i = 0, _a = this.micStream.getTracks(); _i < _a.length; _i++) {\n                var track = _a[_i];\n                track.stop();\n            }\n        }\n        if (this.audioContext && this.audioContext.state != 'closed') {\n            this.audioContext.close();\n            this.audioContext = null;\n        }\n        if (this.refreshTimer) {\n            clearInterval(this.refreshTimer);\n            this.refreshTimer = null;\n        }\n        // DEBUG: Uncomment to get all the decoded audio packets at call end in console\n        // console.log(this.decodedPackets);\n    };\n    // we have the worklet loaded, now set up the audio chain\n    AudioEngine.prototype.onModuleAdded = function (liveInput, heartMode) {\n        if (heartMode === void 0) { heartMode = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var constraints, _a, useFeedBackAnaylser, state;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (heartMode) {\n                            constraints = {\n                                audio: {\n                                    echoCancellation: false,\n                                    googEchoCancellation: { exact: false },\n                                    channelCount: 2,\n                                    autoGainControl: false,\n                                    noiseSuppression: false,\n                                    //echoCancellationType: 'browser', // https://developers.google.com/web/updates/2018/06/more-native-echo-cancellation\n                                    sampleRate: 16000\n                                }\n                            };\n                        }\n                        else {\n                            constraints = {\n                                audio: {\n                                    echoCancellation: false,\n                                    googEchoCancellation: { exact: false },\n                                    channelCount: 2,\n                                    autoGainControl: false,\n                                    noiseSuppression: false,\n                                    //echoCancellationType: 'browser', // https://developers.google.com/web/updates/2018/06/more-native-echo-cancellation\n                                    sampleRate: 16000\n                                }\n                            };\n                        }\n                        return [4 /*yield*/, this.loadOpusEncoder()];\n                    case 1:\n                        _b.sent();\n                        // resampler\n                        // if (this.audioContext.sampleRate !== 16000) {\n                        //     console.log('Worklet Resampler enabled. To/From ' + this.audioContext.sampleRate + ' to 16000 Hz');\n                        //     const kMaxResamplerBuffer = 5000; // with one channel, Resampler buffer needs to be big enough, not exact. We dont know our buffer sizes!\n                        //     this.resamplerTo48 = new Resampler(this.audioContext.sampleRate, 16000, 1, kMaxResamplerBuffer);\n                        //     this.resamplerFrom48 = new Resampler(16000, this.audioContext.sampleRate, 1, kMaxResamplerBuffer);\n                        // }\n                        // Add lung noise gate\n                        // await this.audioContext.audioWorklet.addModule('/assets/js/LungNoiseGate.js');\n                        // Add auto gain\n                        // await this.audioContext.audioWorklet.addModule('/assets/js/LungAutoGain.js');\n                        // microphone\n                        _a = this;\n                        return [4 /*yield*/, navigator.mediaDevices.getUserMedia(constraints)];\n                    case 2:\n                        // resampler\n                        // if (this.audioContext.sampleRate !== 16000) {\n                        //     console.log('Worklet Resampler enabled. To/From ' + this.audioContext.sampleRate + ' to 16000 Hz');\n                        //     const kMaxResamplerBuffer = 5000; // with one channel, Resampler buffer needs to be big enough, not exact. We dont know our buffer sizes!\n                        //     this.resamplerTo48 = new Resampler(this.audioContext.sampleRate, 16000, 1, kMaxResamplerBuffer);\n                        //     this.resamplerFrom48 = new Resampler(16000, this.audioContext.sampleRate, 1, kMaxResamplerBuffer);\n                        // }\n                        // Add lung noise gate\n                        // await this.audioContext.audioWorklet.addModule('/assets/js/LungNoiseGate.js');\n                        // Add auto gain\n                        // await this.audioContext.audioWorklet.addModule('/assets/js/LungAutoGain.js');\n                        // microphone\n                        _a.micStream = _b.sent();\n                        this.micSourceNode = this.audioContext.createMediaStreamSource(this.micStream);\n                        // the background thread processor that gets the bytes\n                        this.socketWorkletNode = new AudioWorkletNode(this.audioContext, 'socket-worklet');\n                        // this.micSourceNode.connect(this.socketWorkletNode);\n                        this.socketWorkletNode.connect(this.audioContext.destination);\n                        this.spectrogramDrawer = new spectrogram_1.SpectrogramDrawer(this.audioContext, this.divID, heartMode);\n                        this.spectrogramDrawer.beginDisplay();\n                        // Note: This means it will show graph of unfiltered audio\n                        this.socketWorkletNode.connect(this.spectrogramDrawer.analyserNode);\n                        useFeedBackAnaylser = false;\n                        if (useFeedBackAnaylser) {\n                            this.setUpFeedbackAnalyser();\n                        }\n                        state = 'kPause';\n                        if (liveInput) {\n                            // initial state is kRecordMic - current set up is when remote audio data is added will transition to kRecordRemote\n                            // recording is not happening yet...\n                            state = 'kRecordMic'; // these are defined at the top of steth-worklet-processor.js\n                        }\n                        // this.socketWorkletNode.port.postMessage({\n                        //     type: 'setState', state: state,\n                        //     filterFunctions: false, // this.filterFunctions.processAudio,\n                        //     // URL.createObjectURL(new Blob([this.filterFunctions.processAudio.toString()])),\n                        //     newAudioFilter: this.newAudioFilter\n                        // });\n                        /* , [\n                            this.filterFunctions.processAudio\n                        ] */\n                        // When the underlying audio processor gets a set of samples, it posts a message so we can encode the samples in opus and\n                        // send them via the web socket to the server.\n                        // this.socketWorkletNode.port.onmessage = this.handleWorkletProcessorMessage;\n                        console.log('moduleloaded', liveInput, this.socketWorkletNode, state);\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    // adding heart biquad filter\n    AudioEngine.prototype.connectHeartBiquad = function (single) {\n        if (single === void 0) { single = true; }\n        if (single) {\n            this.biquadFilter.type = \"lowpass\";\n            this.biquadFilter.frequency.value = 250;\n            // this.biquadFilter.gain.value = 25;\n            this.micSourceNode.connect(this.biquadFilter);\n        }\n        else {\n            // TODO: Automatic gain, lung gain and heart gain\n            // Add gain node\n            this.gainNode = this.audioContext.createGain();\n            this.gainNode.gain.value = 40; // Earlier 2\n            // this.micSourceNode.connect(this.gainNode);\n            // Filter 1\n            this.biquadFilter.type = \"highpass\";\n            this.biquadFilter.frequency.value = 15;\n            this.biquadFilter.Q.value = 0.707107;\n            this.gainNode.connect(this.biquadFilter);\n            var biquadFilter1 = this.audioContext.createBiquadFilter();\n            var biquadFilter2 = this.audioContext.createBiquadFilter();\n            var biquadFilter3 = this.audioContext.createBiquadFilter();\n            var biquadFilter4 = this.audioContext.createBiquadFilter();\n            var biquadFilter5 = this.audioContext.createBiquadFilter();\n            var biquadFilter6 = this.audioContext.createBiquadFilter();\n            var biquadFilter7 = this.audioContext.createBiquadFilter();\n            var biquadFilter8 = this.audioContext.createBiquadFilter();\n            // Filter 2\n            biquadFilter1.type = \"peaking\";\n            biquadFilter1.frequency.value = 40;\n            biquadFilter1.Q.value = 0.7071;\n            biquadFilter1.gain.value = 6;\n            this.biquadFilter.connect(biquadFilter1);\n            // Filter 3\n            biquadFilter2.type = \"lowpass\";\n            biquadFilter2.frequency.value = 200;\n            biquadFilter2.Q.value = 0.707107;\n            biquadFilter1.connect(biquadFilter2);\n            // Filter 4\n            biquadFilter3.type = \"lowpass\";\n            biquadFilter3.frequency.value = 200;\n            biquadFilter3.Q.value = 1.306;\n            biquadFilter2.connect(biquadFilter3);\n            // Filter 5\n            biquadFilter4.type = \"lowpass\";\n            biquadFilter4.frequency.value = 200;\n            biquadFilter4.Q.value = 0.541;\n            biquadFilter3.connect(biquadFilter4);\n            // Filter 6\n            biquadFilter5.type = \"highpass\";\n            biquadFilter5.frequency.value = 20;\n            biquadFilter5.Q.value = 0.5;\n            biquadFilter4.connect(biquadFilter5);\n            // Filter 7\n            biquadFilter6.type = \"peaking\";\n            biquadFilter6.frequency.value = 160;\n            biquadFilter6.Q.value = 1;\n            biquadFilter6.gain.value = 2;\n            biquadFilter5.connect(biquadFilter6);\n            // Filter 8\n            biquadFilter7.type = \"peaking\";\n            biquadFilter7.frequency.value = 600;\n            biquadFilter7.Q.value = 2;\n            biquadFilter7.gain.value = -3;\n            biquadFilter6.connect(biquadFilter7);\n            // Filter 9\n            biquadFilter8.type = \"peaking\";\n            biquadFilter8.frequency.value = 2100;\n            biquadFilter8.Q.value = 4.5;\n            biquadFilter8.gain.value = 12;\n            biquadFilter7.connect(biquadFilter8);\n            // Note: Does not work\n            // biquadFilter8.connect(this.audioContext.destination);\n            biquadFilter8.connect(this.spectrogramDrawer.analyserNode);\n        }\n    };\n    // adding heart biquad filter\n    AudioEngine.prototype.connectLungBiquad = function (single) {\n        if (single === void 0) { single = true; }\n        if (single) {\n            // Add gain node\n            this.gainNode = this.audioContext.createGain();\n            this.gainNode.gain.value = 2;\n            this.micSourceNode.connect(this.gainNode);\n            this.biquadFilter.type = \"lowpass\";\n            this.biquadFilter.frequency.value = 400;\n            // this.biquadFilter.gain.value = 25;\n            this.biquadFilter.Q.value = 0.7071;\n            this.gainNode.connect(this.biquadFilter);\n            this.biquadFilter.connect(this.audioContext.destination);\n        }\n        else {\n            var noiseGateNode = new AudioWorkletNode(this.audioContext, 'lung-noise-gate');\n            var autoGainNode = new AudioWorkletNode(this.audioContext, 'lung-auto-gain');\n            // this.micSourceNode.connect(noiseGateNode);\n            // Add gain node\n            this.gainNode = this.audioContext.createGain();\n            this.gainNode.gain.value = 60;\n            noiseGateNode.connect(this.gainNode);\n            // Filter 1\n            this.biquadFilter.type = \"highpass\";\n            this.biquadFilter.frequency.value = 80;\n            this.biquadFilter.Q.value = 0.707107;\n            this.gainNode.connect(this.biquadFilter);\n            var biquadFilter1 = this.audioContext.createBiquadFilter();\n            var biquadFilter2 = this.audioContext.createBiquadFilter();\n            var biquadFilter3 = this.audioContext.createBiquadFilter();\n            var biquadFilter4 = this.audioContext.createBiquadFilter();\n            var biquadFilter5 = this.audioContext.createBiquadFilter();\n            var biquadFilter6 = this.audioContext.createBiquadFilter();\n            var biquadFilter7 = this.audioContext.createBiquadFilter();\n            // Filter 2\n            biquadFilter1.type = \"lowpass\";\n            biquadFilter1.frequency.value = 400;\n            biquadFilter1.Q.value = 0.707107;\n            this.biquadFilter.connect(biquadFilter1);\n            // Filter 3\n            biquadFilter2.type = \"lowpass\";\n            biquadFilter2.frequency.value = 1500;\n            biquadFilter2.Q.value = 1.306;\n            biquadFilter1.connect(biquadFilter2);\n            // Filter 4\n            biquadFilter3.type = \"lowpass\";\n            biquadFilter3.frequency.value = 1500;\n            biquadFilter3.Q.value = 0.541;\n            biquadFilter2.connect(biquadFilter3);\n            // Filter 5\n            biquadFilter4.type = \"highpass\";\n            biquadFilter4.frequency.value = 20;\n            biquadFilter4.Q.value = 0.5;\n            biquadFilter3.connect(biquadFilter4);\n            // Filter 6\n            biquadFilter5.type = \"peaking\";\n            biquadFilter5.frequency.value = 160;\n            biquadFilter5.Q.value = 1.0;\n            biquadFilter5.gain.value = 2.0;\n            biquadFilter4.connect(biquadFilter5);\n            // Filter 7\n            biquadFilter6.type = \"peaking\";\n            biquadFilter6.frequency.value = 600;\n            biquadFilter6.Q.value = 2.0;\n            biquadFilter6.gain.value = -3.0;\n            biquadFilter5.connect(biquadFilter6);\n            // Filter 8\n            biquadFilter7.type = \"peaking\";\n            biquadFilter7.frequency.value = 2100;\n            biquadFilter7.Q.value = 4.5;\n            biquadFilter7.gain.value = 12;\n            biquadFilter6.connect(biquadFilter7);\n            // Note: Does not work\n            // biquadFilter7.connect(this.spectrogramDrawer.analyserNode);\n            // biquadFilter7.connect(this.audioContext.destination);\n            biquadFilter7.connect(this.spectrogramDrawer.analyserNode);\n            // autoGainNode.connect(this.audioContext.destination);\n        }\n    };\n    // returns promise on eventual success\n    AudioEngine.prototype.loadOpusEncoder = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var enc_cfg;\n            return __generator(this, function (_a) {\n                // https://kazuki.github.io/opus.js-sample/\n                this.encoder = new audio_encoder_1.AudioEncoder('./opus_encoder.js');\n                console.log(this.encoder);\n                enc_cfg = {\n                    sampling_rate: 16000,\n                    num_of_channels: 1,\n                    params: {\n                        application: 2049,\n                        sampling_rate: 16000,\n                        frame_duration: 20 // ms\n                    }\n                };\n                /* console.log('About to set up encoder '); */\n                return [2 /*return*/, this.encoder.setup(enc_cfg)];\n            });\n        });\n    };\n    // header packets: the first (one? - how do I tell? )\n    AudioEngine.prototype.loadOpusDecoder = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                // https://kazuki.github.io/opus.js-sample/\n                this.decoder = new audio_decoder_1.AudioDecoder('./opus_decoder.js');\n                this.decoderOperational = true;\n                return [2 /*return*/, this.decoder.setup({ channels: 1, sampling_rate: 16000 }, {})]; // 48000\n            });\n        });\n    };\n    // our Opus encoder does NOT like to be called more than once at a time.\n    // so we need to use a queue, like decodePackets()\n    // After buffers have been encoded on the Worker() thread by opus,\n    // we push the data using websockets to the server\n    AudioEngine.prototype.queueBufferForEncodingAndSend = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var allSamples, buffer, packets, i, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.encodingBuffers) {\n                            return [2 /*return*/];\n                        }\n                        if (this.buffersToEncode.length === 0) {\n                            return [2 /*return*/]; // we are done all the packets in the queue\n                        }\n                        // Not every call to this.encoder.encode will result in a packet emitted for the Websocket, that depends on how many\n                        // ms you set in the loadOpusEncoder.\n                        this.encodingBuffers = true;\n                        allSamples = this.buffersToEncode.shift();\n                        buffer = { timestamp: 0, samples: allSamples, transferable: true };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.encoder.encode(buffer)];\n                    case 2:\n                        packets = _a.sent();\n                        // we can and will get 0, 1 or 2 (or more?) packets here\n                        for (i = 0; i < packets.length; ++i) {\n                            this.totalBytesSent += packets[i].data.byteLength;\n                            // console.log(\"Make a way to send packets to destination: \" + packets[i].data.byteLength);\n                            // webSocket.send(packets[i].data);\n                        }\n                        this.encodingBuffers = false;\n                        this.queueBufferForEncodingAndSend(); // do some more if needed\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        console.log('encoder.encoder error', err_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // needs to decode the passed packets\n    // decodes them in order one at time.\n    // If we submit 10 packets in quick succession, we don't get the promise firing in the same order, complex packets will take longer.\n    // So decode them in order by starting on the next one only when we are done one from the this.packetsToDecode global.\n    AudioEngine.prototype.decodePackets = function (heartMode) {\n        var _this = this;\n        if (heartMode === void 0) { heartMode = true; }\n        if (this.decodingPackets) {\n            return;\n        }\n        if (this.packetsToDecode.length === 0) {\n            return; // we are done all the packets in the queue\n        }\n        this.decodingPackets = true;\n        var packet = this.packetsToDecode.shift();\n        // console.log(\"Decoder array buffer length: \", packet.data.byteLength);\n        this.decoder.decode(packet).then(function (buf) {\n            if (buf.samples) {\n                _this.totalSamplesIn += buf.samples.length;\n                // if (this.resamplerFrom48) {\n                //     buf.samples = this.resamplerFrom48.resample(buf.samples);\n                // }\n                // let source = this.audioContext.createBufferSource();\n                // source.buffer = createBuffer(buf.samples, {context: this.audioContext});\n                // source.connect(this.audioContext.destination);\n                // source.start(0);\n                _this.decodedPackets.push(buf.samples);\n                if (_this.socketWorkletNode) {\n                    // console.log(buf.samples);\n                    // console.log(localStorage.getItem('heartGain'));\n                    // console.log(localStorage.getItem('lungGain'));\n                    // TODO: Check if the logic will increase audio if audio is very low\n                    // let lowAudioFlag = 0;\n                    // let actualAudioCounter = 0;\n                    // buf.samples = buf.samples.map(sample => {\n                    //     if(sample > 0 && sample * 1000 < 1){\n                    //         lowAudioFlag++;\n                    //         sample = sample * 100;\n                    //         return sample;\n                    //     } else if(sample < 0 && sample * -1000 < 1){\n                    //         lowAudioFlag++;\n                    //         sample = sample * 100;\n                    //         return sample;\n                    //     } else if(sample > 0) {\n                    //         actualAudioCounter++;\n                    //     }\n                    // });\n                    // if(lowAudioFlag > actualAudioCounter) {\n                    //     this.lowAudioFlag++;\n                    // }\n                    // console.log(this.lowAudioFlag);\n                    console.log(buf);\n                    _this.socketWorkletNode.port.postMessage({\n                        type: 'samples', samples: buf.samples,\n                        heartMode: heartMode,\n                        gain: (heartMode) ? localStorage.getItem('heartGain') : localStorage.getItem('lungGain')\n                    });\n                }\n            }\n            // signal we are ready to do more. Call ourselves in case there are more to do.\n            _this.decodingPackets = false;\n            _this.decodePackets();\n        }, function (info) { console.log('worklet decoder.decode error', info); }).catch(function (err) { return console.log(\"Unable to decode\", err); });\n    };\n    AudioEngine.prototype.setUpFeedbackAnalyser = function () {\n        var _this = this;\n        this.analyser = this.audioContext.createAnalyser();\n        this.analyser.fftSize = 256;\n        this.analyserData = new Float32Array(this.analyser.frequencyBinCount);\n        this.refreshTimer = setInterval(function () { return _this.refreshAnalyserData(); }, 50);\n        this.micSourceNode.connect(this.analyser);\n    };\n    // the idea here is that we can perhaps work to reject feedback whine, which in my studies is characterized on my Mac Laptop/Chrome with loud sounds at 2 kHz but epspecially one at 6 kHz\n    AudioEngine.prototype.refreshAnalyserData = function () {\n        this.analyser.getFloatFrequencyData(this.analyserData);\n        // we have analyser.frequencyBinCount bins from 0 - 24,000 hz\n        // feedback happens at frequencies above people's voices.\n        // Voices are mostly below 1000Hz, feedback is above that...\n        var kLowFreq = 100;\n        var kMidFreq = 2000;\n        var kTopFreq = 48000 / 2;\n        // const HzPerBin = kTopFreq/this.analyser.frequencyBinCount;\n        var kBinLow = kLowFreq / kTopFreq * this.analyser.frequencyBinCount;\n        var kBinMid = kMidFreq / kTopFreq * this.analyser.frequencyBinCount;\n        var powerAtLow = 0.0;\n        var numAtLow = 0;\n        var powerAtMid = 0.0;\n        var numAtMid = 0;\n        var powerAtHigh = 0.0;\n        var numAtHigh = 0;\n        var i;\n        for (i = 0; i < this.analyser.frequencyBinCount; i++) {\n            if (i < kBinLow) {\n                powerAtLow += this.analyserData[i];\n                numAtLow++;\n            }\n            else if (i < kBinMid) {\n                powerAtMid += this.analyserData[i];\n                numAtMid++;\n            }\n            else {\n                powerAtHigh += this.analyserData[i];\n                numAtHigh++;\n            }\n            // this will show a spectrum -\n            // const chorus = '*';\n            // console.log(Math.round(i*HzPerBin) + \" \" + chorus.repeat(140+this.analyserData[i]));\n        }\n        powerAtLow = powerAtLow / numAtLow;\n        powerAtMid = powerAtMid / numAtMid;\n        powerAtHigh = powerAtHigh / numAtHigh;\n        this.feedbackGain = 1.0;\n        if (powerAtMid * 1.3 < powerAtHigh) {\n            this.feedbackGain = powerAtHigh / (powerAtMid * 1.3);\n            console.log('feedback? gain is now: ' + this.feedbackGain);\n        }\n        console.log('power low: ' + powerAtLow + '   power mid: ' + powerAtMid + '   power hi: ' + powerAtHigh);\n    };\n    AudioEngine.prototype.setInputEnabled = function (value) {\n        if (this.micStream) {\n            this.micStream.getAudioTracks()[0].enabled = value; // or false to mute it.\n        }\n    };\n    AudioEngine.prototype.setAudioBuffer = function (audioBuffer, heartMode) {\n        if (heartMode === void 0) { heartMode = true; }\n        // SET the audio.\n        // Used to load an entire file.\n        var allSamples = audioBuffer.getChannelData(0);\n        this.socketWorkletNode.port.postMessage({\n            type: 'setSamples', samples: allSamples,\n            heartMode: heartMode,\n            gain: (heartMode) ? localStorage.getItem('heartGain') : localStorage.getItem('lungGain')\n        });\n    };\n    AudioEngine.prototype.addAudioSamples = function (samples) {\n        // console.log('samples.length: ', samples.length);\n        // console.log('samples.byteLength: ', samples.byteLength);\n        // Add samples (EG 300 - 2000 samples from Twilio data). Audio is assumued to be at full rate (44100 or 48000 Hz)\n        // so resampling may be needed before calling this.\n        // Used to load an entire file.\n        this.socketWorkletNode.port.postMessage({\n            type: 'samples', samples: samples,\n            filterFunctions: JSON.stringify(this.filterFunctions),\n            newAudioFilter: this.newAudioFilter\n        });\n    };\n    // interleaved PCM data in signed 16bits int (interleaving for one channel is meaningless)\n    // I think data is coming in from Twilio at 3000Hz integer16 PCM but not sure.\n    // Better would be to use Opus on the iOS and Android ends, then I already have a decoder\n    AudioEngine.prototype.resampleAudio = function (int16SamplesAt3000Hz) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    // Audio filter logic\n    // Get the filter config from json and add filters\n    AudioEngine.prototype.parseBiquadFilter = function (type) {\n        var _this = this;\n        if (type === void 0) { type = 'heart'; }\n        if (puckJson) {\n            var iphone7 = puckJson['iphone7'];\n            iphone7.forEach(function (item) {\n                if (item.name === type && item.filter) {\n                    item.filter.forEach(function (f) {\n                        _this.addFilter(f);\n                    });\n                }\n            });\n        }\n    };\n    // Add filters to the model\n    AudioEngine.prototype.addFilter = function (filterModel) {\n        var a0 = 0;\n        var a1 = 0;\n        var a2 = 0;\n        var b1 = 0;\n        var b2 = 0;\n        // ref's are used for testing filter design and may be removed\n        var refa0 = 0;\n        var refa1 = 0;\n        var refa2 = 0;\n        var refb1 = 0;\n        var refb2 = 0;\n        var coeffs = [0.0, 0.0, 0.0, 0.0, 0.0];\n        var decodedFilter = false;\n        var type = filterModel.type;\n        if (type == 'peak') {\n            var freq = filterModel.freq || 0.0;\n            var q = filterModel.q || 0.0;\n            if (q == 0.0) {\n                var width = filterModel.width || 0.0;\n                if (width < 0.001) {\n                    width = 0.001;\n                }\n                q = this.filterFunctions.calculateQFromOctaveWidth(width);\n            }\n            var gain = filterModel.gain || 0.0;\n            this.filterFunctions.calculateBiquadPeak(freq, this.kAudioFrequencyExact, q, gain, a0, a1, a2, b1, b2);\n            decodedFilter = true;\n        }\n        if (type == 'lowpass2') {\n            var freq = filterModel.freq || 0.0;\n            var q = filterModel.q || 0.0;\n            this.filterFunctions.calculateLP2(freq, this.kAudioFrequencyExact, q, coeffs);\n            a0 = coeffs[0];\n            a1 = coeffs[1];\n            a2 = coeffs[2];\n            b1 = coeffs[3];\n            b2 = coeffs[4];\n            decodedFilter = true;\n        }\n        if (type == 'highpass2') {\n            var freq = filterModel.freq || 0.0;\n            var q = filterModel.q || 0.0;\n            this.filterFunctions.calculateHP2(freq, this.kAudioFrequencyExact, q, coeffs);\n            a0 = coeffs[0];\n            a1 = coeffs[1];\n            a2 = coeffs[2];\n            b1 = coeffs[3];\n            b2 = coeffs[4];\n            decodedFilter = true;\n        }\n        if (type == 'Butterworth4a') {\n            var freq = filterModel.freq || 0.0;\n            this.filterFunctions.calculateBW4Section(freq, this.kAudioFrequencyExact, 0, coeffs);\n            a0 = coeffs[0];\n            a1 = coeffs[1];\n            a2 = coeffs[2];\n            b1 = coeffs[3];\n            b2 = coeffs[4];\n            decodedFilter = true;\n        }\n        if (type == 'Butterworth4b') {\n            var freq = filterModel.freq || 0.0;\n            this.filterFunctions.calculateBW4Section(freq, this.kAudioFrequencyExact, 1, coeffs);\n            a0 = coeffs[0];\n            a1 = coeffs[1];\n            a2 = coeffs[2];\n            b1 = coeffs[3];\n            b2 = coeffs[4];\n            decodedFilter = true;\n        }\n        if (type == 'bandpass2') {\n            var freq = filterModel.freq || 0.0;\n            var q = filterModel.q || 0.0;\n            this.filterFunctions.calculateBP2(freq, this.kAudioFrequencyExact, q, coeffs);\n            a0 = coeffs[0];\n            a1 = coeffs[1];\n            a2 = coeffs[2];\n            b1 = coeffs[3];\n            b2 = coeffs[4];\n            decodedFilter = true;\n        }\n        if (type == 'raw') {\n            a0 = filterModel.a0 || 0.0;\n            a1 = filterModel.a1 || 0.0;\n            a2 = filterModel.a2 || 0.0;\n            b1 = filterModel.b1 || 0.0;\n            b2 = filterModel.b2 || 0.0;\n            decodedFilter = true;\n        }\n        if (filterModel.a0 != null) {\n            // assume for now that the others are there\n            refa0 = filterModel.a0 || 0.0;\n            refa1 = filterModel.a1 || 0.0;\n            refa2 = filterModel.a2 || 0.0;\n            refb1 = filterModel.b1 || 0.0;\n            refb2 = filterModel.b2 || 0.0;\n            // Check out of bounds condition\n            if (Math.abs(a0 - refa0) > 1e-7 || Math.abs(a1 - refa1) > 1e-7 ||\n                Math.abs(a2 - refa2) > 1e-7 || Math.abs(b1 - refb1) > 1e-7 ||\n                Math.abs(b2 - refb2) > 1e-7) {\n                console.log(\"Error designing \".concat(filterModel, \" filter\"));\n            }\n        }\n        if (decodedFilter) {\n            this.filterFunctions.glsteth_filter_addBiquad(this.newAudioFilter, a0, a1, a2, b1, b2);\n        }\n        else {\n            console.log(\"Failed to decode \".concat(filterModel, \" filter\"));\n        }\n    };\n    return AudioEngine;\n}());\nexports.default = AudioEngine;\nvar puckJson = {\n    \"note\": \"Filter updates by Ray Miller with Puck EQ.\",\n    \"date\": \"2020-04-01T13:21:58Z\",\n    \"default\": \"iphone7\",\n    \"devices\": [\"iphone7\"],\n    \"iphone7\": [{\n            \"filter\": [{\n                    \"type\": \"highpass2\",\n                    \"freq\": 15,\n                    \"q\": 0.707107,\n                    \"note\": \"HP 15 Hz\",\n                    \"a0\": 0.9984899566,\n                    \"a1\": -1.9969799132,\n                    \"a2\": 0.9984899566,\n                    \"b1\": -1.9969776329,\n                    \"b2\": 0.9969821934\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"earlevel peak filter\",\n                    \"freq\": 40,\n                    \"q\": 0.7071,\n                    \"gain\": 6\n                }, {\n                    \"type\": \"lowpass2\",\n                    \"freq\": 200,\n                    \"q\": 0.707107,\n                    \"note\": \"LP 200Hz fs 44100\",\n                    \"a0\": 0.0001989714,\n                    \"a1\": 0.0003979428,\n                    \"a2\": 0.0001989714,\n                    \"b1\": -1.9597070338,\n                    \"b2\": 0.9605029194\n                }, {\n                    \"type\": \"Butterworth4a\",\n                    \"freq\": 250,\n                    \"note\": \"BW4A 250Hz fs 44100\",\n                    \"a0\": 0.0003128802,\n                    \"a1\": 0.0006257604,\n                    \"a2\": 0.0003128802,\n                    \"b1\": -1.9718591139,\n                    \"b2\": 0.9731106348\n                }, {\n                    \"type\": \"Butterworth4b\",\n                    \"freq\": 250,\n                    \"note\": \"BW4B 250Hz fs 44100\",\n                    \"a0\": 0.0003070422,\n                    \"a1\": 0.0006140845,\n                    \"a2\": 0.0003070422,\n                    \"b1\": -1.9350664333,\n                    \"b2\": 0.9362946022\n                }, {\n                    \"type\": \"highpass2\",\n                    \"freq\": 20,\n                    \"q\": 0.5,\n                    \"note\": \"HP 20 Hz\"\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"peak filter\",\n                    \"freq\": 160,\n                    \"q\": 1.0,\n                    \"gain\": 2.0\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"peak filter\",\n                    \"freq\": 600,\n                    \"q\": 2.0,\n                    \"gain\": -3.0\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"peak filter\",\n                    \"freq\": 2100,\n                    \"q\": 4.5,\n                    \"gain\": 12.0\n                }],\n            \"note\": \"\",\n            \"name\": \"heart\"\n        }, {\n            \"filter\": [{\n                    \"type\": \"highpass2\",\n                    \"freq\": 80,\n                    \"q\": 0.707107,\n                    \"note\": \"HPF at 80 Hz, fs 44100\",\n                    \"a0\": 0.9919727398,\n                    \"a1\": -1.9839454796,\n                    \"a2\": 0.9919727398,\n                    \"b1\": -1.9838810417,\n                    \"b2\": 0.9840099175\n                }, {\n                    \"type\": \"lowpass2\",\n                    \"freq\": 400,\n                    \"q\": 0.707107,\n                    \"note\": \"LPF at 400 Hz, fs 44100\",\n                    \"a0\": 0.0007803263,\n                    \"a1\": 0.0015606526,\n                    \"a2\": 0.0007803263,\n                    \"b1\": -1.9194445715,\n                    \"b2\": 0.9225658767\n                }, {\n                    \"type\": \"Butterworth4a\",\n                    \"freq\": 1500,\n                    \"note\": \"BW4A 1500 Hz, fs 44100\",\n                    \"a0\": 0.0105210738,\n                    \"a1\": 0.0210421475,\n                    \"a2\": 0.0105210738,\n                    \"b1\": -1.8077745420,\n                    \"b2\": 0.8498588371\n                }, {\n                    \"type\": \"Butterworth4b\",\n                    \"freq\": 1500,\n                    \"note\": \"BW4B, 1500 Hz, fs 44100\",\n                    \"a0\": 0.0095112988,\n                    \"a1\": 0.0190225976,\n                    \"a2\": 0.0095112988,\n                    \"b1\": -1.6342708171,\n                    \"b2\": 0.6723160123\n                }, {\n                    \"type\": \"highpass2\",\n                    \"freq\": 20,\n                    \"q\": 0.5,\n                    \"note\": \"HP 20 Hz\"\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"peak filter\",\n                    \"freq\": 160,\n                    \"q\": 1.0,\n                    \"gain\": 2.0\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"peak filter\",\n                    \"freq\": 600,\n                    \"q\": 2.0,\n                    \"gain\": -3.0\n                }, {\n                    \"type\": \"peak\",\n                    \"note\": \"peak filter\",\n                    \"freq\": 2100,\n                    \"q\": 4.5,\n                    \"gain\": 12.0\n                }],\n            \"note\": \"\",\n            \"name\": \"lungs\"\n        }]\n};\n// export { AudioEngine };\n// window['AudioEngine'] = AudioEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./audio-engine\"), exports);\n","\"use strict\";\n// See http://arc.id.au/Spectrogram.html for documentation\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpectrogramDrawer = void 0;\nvar SpectrogramDrawer = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param  {number} length Buffer length in frames.\n     * @param  {number} channelCount Buffer channel count.\n     */\n    function SpectrogramDrawer(context, divID, heartMode) {\n        var _this = this;\n        this.drawOnScreen = function () {\n            // draw main image\n            _this.canvasContextXX.imageSmoothingEnabled = false;\n            _this.canvasContextXX.drawImage(_this.wf.offScreenCvs, 0, 0);\n            if (_this.playing) {\n                requestAnimationFrame(_this.drawOnScreen);\n            }\n        };\n        // these DO NOT Wrap\n        // (well I wrap them after hours so I don't run into an 11.6 hour max, so readIndex and _writeIndex can 'only' be a maximum of a ~5 hours apart)\n        this.divID = divID;\n        this.context = context;\n        this.analyserNode = this.context.createAnalyser();\n        // this.analyserNode.smoothingTimeConstant = this.analyserNode.smoothingTimeConstant/4.0;\n        this.analyserNode.fftSize = 2048; // 4096\n        this.analyserNode.smoothingTimeConstant = 0.0;\n        this.frqBuf = new Uint8Array(this.analyserNode.frequencyBinCount); //\n        this.floatFreqData = new Float32Array(this.analyserNode.frequencyBinCount);\n        this.floatTimeData = new Float32Array(this.analyserNode.frequencyBinCount);\n        this.wfNumPts = 400; // 10*analyserNode.frequencyBinCount/128; // 400 +ve freq bins\n        this.wfBufAry = [this.frqBuf];\n        this.canvas = document.getElementById(divID);\n        // set here. You can't change the size of the target rect dynamically, you have to make a new SpectrogramDrawer\n        var targetRect = this.canvas.getBoundingClientRect();\n        // TODO: Hide below if RPM exams\n        // this.targetWidth = 2*targetRect.width;// attempt at retina resolution, but seems not done yet\n        // this.targetHeight = 2*targetRect.height;\n        // TODO: Undide below if RPM calls\n        this.targetWidth = Math.floor(targetRect.width);\n        this.targetHeight = Math.floor(targetRect.height); // -260\n        // this.wf = new Waterfall(this.wfBufAry, 400, 700, \"right\", {});\n        this.wf = new StethIOSpectrogram(this.wfBufAry, this.targetWidth, this.targetHeight, {}, this, heartMode);\n        this.desiredMaxDB = 0;\n        this.gain = 1.0; // DB to add to the float data as we need quiet heart sounds to shine through\n        // cast to HTMLCanvasElement so we can call canvas.getContext\n        this.canvasContextXX = this.canvas.getContext('2d');\n        this.canvasContextXX.resetTransform();\n        // this.canvasForLine = <HTMLCanvasElement> document.getElementById(lineDiv);\n        // this.lineContext = this.canvasForLine.getContext(\"2d\");\n    }\n    // This is only max gain adjust and will not interfere with other gain adjustment in filters\n    // Min is 0 -- Obviously sound data will be above 0 if not its plain\n    // Max is -100.0 -- Onvoiusly this is way too high and impossible to get such high sonds\n    SpectrogramDrawer.prototype.doGainAdjust = function () {\n        // look for max/min, min is lowest sound\n        var max = -100.0;\n        var min = 0;\n        for (var i = 0; i < this.floatFreqData.length / 30; i++) {\n            if (this.floatFreqData[i] > max) {\n                max = this.floatFreqData[i];\n            }\n            if (this.floatFreqData[i] < min) {\n                min = this.floatFreqData[i];\n            }\n        }\n        // we have a desired max DB of -40\n        // max is -60, so add 20 onto everyone\n        // we have a desired average\n        // adjust gain to get there\n        var instaGain = this.desiredMaxDB - max;\n        this.gain = this.gain * 0.985 + instaGain * 0.015; // at 30 frames/sec time constant is ~2 sec\n        // console.log(\"gain: \" + this.gain)\n    };\n    SpectrogramDrawer.prototype.convertToByteFrequencyData = function () {\n        // // negative numbers, -40 is louder than -100\n        var highFrequencyBoost = 12.0; //lung sounds clearer than heart sounds\n        var scale = highFrequencyBoost / this.floatFreqData.length; //high frequency boost\n        for (var i = 0; i < this.floatFreqData.length; i++) {\n            var soundLevel = (this.floatFreqData[i] + this.gain); // loudest soundLevel for a band should be ~0, numbers will go to like -40\n            var dynamicRange = 9; // too high and you only see peaks, too low every thing is noisy\n            //let byteVal = 255 + soundLevel * dynamicRange + scale; //original scaling\n            var visualGain = 400.0; //sensitivity\n            var visualOffset = -10; //eliminate display of soft sounds\n            var byteVal = visualGain * Math.pow(10.0, 0.05 * soundLevel) * (1.0 + scale * i) + visualOffset;\n            // console.log(byteVal);\n            // console.log(255 * Math.pow(10, 0.05 * this.floatFreqData[i]));\n            if (byteVal > 255) {\n                byteVal = 255;\n            }\n            if (byteVal < 0) {\n                byteVal = 0;\n            }\n            this.frqBuf[i] = byteVal;\n        }\n    };\n    // we are only interested in the bottom 1/30 of frequencies, so up to 24000/30 ie 800 Hz\n    SpectrogramDrawer.prototype.getCursorPosition = function () {\n        /**\n         * Explantion: https://stackoverflow.com/questions/40315433/analysernodes-getfloatfrequencydata-vs-getfloattimedomaindata\n         * More Info: https://stackoverflow.com/questions/24083349/understanding-getbytetimedomaindata-and-getbytefrequencydata-in-web-audio\n         * The Float32Array obtained using getFloatTimeDomainData will contain an array\n         * of sample values, each value defining the amplitude at the sampled location,\n         * usually in the domain of [-1, 1]. Sample locations are uniquely distributed,\n         * the obtained data is essentially the equivalent of raw PCM.\n         *  */\n        this.analyserNode.getFloatTimeDomainData(this.floatTimeData); // negative numbers, -40 is louder than -100\n        var sum = 0.0;\n        for (var i = 0; i < this.floatTimeData.length / 2; i++) {\n            sum += this.floatTimeData[i];\n        }\n        return sum / this.floatTimeData.length / 2;\n    };\n    SpectrogramDrawer.prototype.getMaxMinPosition = function () {\n        /**\n         * Explantion: https://stackoverflow.com/questions/40315433/analysernodes-getfloatfrequencydata-vs-getfloattimedomaindata\n         * More Info: https://stackoverflow.com/questions/24083349/understanding-getbytetimedomaindata-and-getbytefrequencydata-in-web-audio\n         * The Float32Array obtained using getFloatTimeDomainData will contain an array\n         * of sample values, each value defining the amplitude at the sampled location,\n         * usually in the domain of [-1, 1]. Sample locations are uniquely distributed,\n         * the obtained data is essentially the equivalent of raw PCM.\n         *  */\n        this.analyserNode.getFloatTimeDomainData(this.floatTimeData); // negative numbers, -40 is louder than -100\n        var max = -1.0;\n        var min = 1.0;\n        for (var i = 0; i < this.floatTimeData.length / 2; i++) {\n            var val = this.floatTimeData[i];\n            if (val > max) {\n                max = val;\n            }\n            if (val < min) {\n                min = val;\n            }\n        }\n        // console.log(\"min, \", min, \"max: \", max);\n        return [max, min];\n    };\n    // we are interested in low frequencies\n    SpectrogramDrawer.prototype.adjustVerticalScaleByteBuffer = function () {\n        for (var i = this.frqBuf.length; i > 1; i--) {\n            var half = i / 2;\n            var low = Math.round(half - 1);\n            var mid = Math.round(half);\n            var high = Math.round(half + 1);\n            this.frqBuf[i] = 0.25 * this.frqBuf[low] + 0.5 * this.frqBuf[mid] + 0.25 * this.frqBuf[high];\n        }\n    };\n    SpectrogramDrawer.prototype.beginDisplay = function () {\n        this.wf.start();\n        this.playing = true;\n        this.drawOnScreen();\n    };\n    SpectrogramDrawer.prototype.haltDisplay = function () {\n        this.wf.stop();\n        this.playing = false;\n    };\n    SpectrogramDrawer.prototype.resumeDisplay = function () {\n        this.playing = true;\n        this.drawOnScreen();\n    };\n    return SpectrogramDrawer;\n}());\nexports.SpectrogramDrawer = SpectrogramDrawer;\n/*=============================================================\n  Filename: Spectrogram-1v00.js\n\n  JavaScript graphics functions to draw Spectrograms.\n\n  Date    Description                                       By\n  -------|-------------------------------------------------|---\n  12Nov18 First beta                                        ARC\n  17Nov18 Added offset into data buffer                     ARC\n  08May19 this.imageURL URL added\n          bugfix: fixed isNaN test\n          Changed sgStart, sgStop to start, stop\n          Added options object to constructors              ARC\n  10May19 Enabled Left to Right as well as Top to Bottom    ARC\n  11May19 Added RasterscanSVG                               ARC\n  12May19 Added blnkline for horizontal ratser scans        ARC\n  13May19 Eliminated unneccessary putImageData              ARC\n  14May19 Removed toDataURL, not used drawImage is better\n          bugfix: SVG RHC names swapped                     ARC\n  02Jun19 bugfix: startOfs not honored in horizontalNewLine ARC\n  03Jun19 Flipped the SVG and RHC names for waterfalls      ARC\n  04Jun19 Unflip SVG and RHC for horizontal mode            ARC\n          Swap \"SVG\" & \"RHC\" strings to match fn names      ARC\n  05Jun19 bugfix: WaterfallSVG scrolling wrong way          ARC\n  10Jun19 bugfix: support lineRate=0 for static display\n          bugfix: ipBufPtr must be a ptr to a ptr           ARC\n  11Jun19 Make ipBuffers an Array of Arrays, if lineRate=0\n          use all buffers else use only ipBuffer[0]         ARC\n  13Jun19 Use Waterfall and Rasterscan plus direction\n          Use Boolean rater than string compare             ARC\n  16Jun19 Use const and let                                 ARC\n  20Jun19 Change order of parameters                        ARC\n  21Jun19 Add setLineRate method                            ARC\n  06Jul19 Released as Rev 1v00                              ARC\n ==============================================================*/\nvar StethIOSpectrogram = /** @class */ (function () {\n    function StethIOSpectrogram(ipBufAry, w, h, options, drawer, heartMode) {\n        this.heartMode = heartMode;\n        this.opt = (typeof options === 'object') ? options : {}; // avoid undeclared object errors\n        this.ipBufAry = ipBufAry;\n        this.offScreenCtx;\n        this.pxPerLine = w || 200;\n        this.lines = (h >= 200) ? h : 200;\n        this.lineRate = 30; // or perhap w/25 ?   // requested line rate for dynamic waterfalls\n        this.interval = 0; // msec\n        this.startOfs = 0;\n        this.spectogramDrawer = drawer;\n        this.vertLineBuf = new ArrayBuffer(parseInt('' + this.lines) * 4); // 1 line\n        this.vertLineBuf8 = new Uint8ClampedArray(this.vertLineBuf);\n        this.vertLineImgData = new ImageData(this.vertLineBuf8, 1, parseInt('' + this.lines)); // 1 vertical line of canvas pixels\n        this.ipBuf8 = null; // map input data to 0..255 unsigned bytes\n        this.clearBuf = new ArrayBuffer(parseInt('' + this.pxPerLine) * parseInt('' + this.lines) * 4); // fills with 0s ie. rgba 0,0,0,0 = transparent\n        this.clearBuf8 = new Uint8ClampedArray(this.clearBuf);\n        this.buildColourMap();\n        // make a full canvas of the color map 0 values\n        for (var i = 0; i < this.pxPerLine * this.lines * 4; i += 4) {\n            // byte reverse so number aa bb gg rr\n            this.clearBuf8[i] = this.colMap[0][0]; // red\n            this.clearBuf8[i + 1] = this.colMap[0][1]; // green\n            this.clearBuf8[i + 2] = this.colMap[0][2]; // blue\n            this.clearBuf8[i + 3] = this.colMap[0][3]; // alpha\n        }\n        this.clearImgData;\n        this.nextLine = 0;\n        this.timerID = null;\n        this.running = false;\n        this.sgTime = 0;\n        this.sgStartTime = 0;\n        this.demoCvsId = '';\n        // ===== set all the options  ================\n        for (var prop in this.opt) {\n            // check that this is opt's own property, not inherited from prototype\n            if (this.opt.hasOwnProperty(prop)) {\n                this.setProperty(prop, this.opt[prop]);\n            }\n        }\n        // ===== now make the exposed properties and methods ===============\n        this.offScreenCvs = document.createElement('canvas');\n        // data written in columns\n        this.offScreenCvs.setAttribute('height', this.lines.toString()); // reset canvas pixels width\n        this.offScreenCvs.setAttribute('width', this.pxPerLine.toString()); // don't use style for this\n        this.clearImgData = new ImageData(this.clearBuf8, parseInt('' + this.lines), parseInt('' + this.pxPerLine));\n        this.offScreenCtx = this.offScreenCvs.getContext('2d');\n        this.offScreenCtx.imageSmoothingEnabled = false;\n        this.offScreenCtx.strokeStyle = 'rgba(255, 255, 255, 1.0)'; // play with this line for line colour\n        this.offScreenCtx.lineWidth = 0.5; // thickness - max 1 only makes sense\n        // for diagnostics only\n        if (typeof (this.demoCvsId) == 'string' && this.demoCvsId) {\n            document.getElementById(this.demoCvsId).appendChild(this.offScreenCvs);\n        }\n        // initialize the direction and first line position\n        this.stop();\n        // everything is set\n        // if dynamic, wait for the start or newLine methods to be called\n    }\n    // Matlab Jet ref: stackoverflow.com grayscale-to-red-green-blue-matlab-jet-color-scale\n    StethIOSpectrogram.prototype.buildColourMap = function () {\n        var mode = localStorage.getItem('processingMode');\n        // Draw sound line if heart mode\n        if ((!mode && this.heartMode) || mode === 'HEART') {\n            // New Heart -- 255 colors + 1 black color added at start\n            this.colMap = [\n                [0, 0, 0, 255],\n                [204, 204, 204, 0],\n                [177, 152, 204, 1],\n                [171, 143, 204, 3],\n                [166, 136, 204, 4],\n                [162, 131, 204, 6],\n                [159, 127, 204, 7],\n                [155, 124, 204, 9],\n                [152, 120, 204, 10],\n                [148, 118, 204, 12],\n                [145, 115, 204, 14],\n                [142, 113, 204, 15],\n                [139, 111, 204, 17],\n                [136, 108, 204, 18],\n                [133, 107, 204, 20],\n                [130, 105, 204, 21],\n                [127, 103, 204, 23],\n                [124, 101, 204, 25],\n                [121, 100, 204, 26],\n                [118, 98, 204, 28],\n                [114, 97, 204, 29],\n                [111, 96, 204, 31],\n                [108, 94, 204, 32],\n                [105, 93, 204, 34],\n                [102, 92, 204, 36],\n                [99, 91, 204, 37],\n                [96, 89, 204, 39],\n                [93, 88, 204, 40],\n                [90, 87, 204, 42],\n                [87, 86, 204, 43],\n                [85, 86, 204, 45],\n                [84, 88, 204, 46],\n                [83, 89, 204, 48],\n                [82, 90, 204, 49],\n                [81, 91, 204, 51],\n                [80, 93, 204, 53],\n                [79, 94, 204, 54],\n                [78, 95, 204, 56],\n                [78, 97, 204, 57],\n                [77, 98, 204, 59],\n                [76, 100, 204, 60],\n                [75, 102, 204, 62],\n                [74, 103, 204, 63],\n                [74, 105, 204, 65],\n                [73, 107, 204, 66],\n                [72, 108, 204, 68],\n                [71, 110, 204, 69],\n                [71, 112, 204, 71],\n                [70, 114, 204, 72],\n                [69, 116, 204, 74],\n                [68, 118, 204, 75],\n                [68, 120, 204, 77],\n                [67, 122, 204, 78],\n                [66, 124, 204, 80],\n                [66, 126, 204, 81],\n                [65, 128, 204, 83],\n                [64, 130, 204, 84],\n                [64, 132, 204, 86],\n                [63, 134, 204, 87],\n                [63, 136, 204, 89],\n                [62, 139, 204, 90],\n                [61, 141, 204, 92],\n                [61, 143, 204, 93],\n                [60, 145, 204, 95],\n                [60, 148, 204, 96],\n                [59, 150, 204, 97],\n                [59, 152, 204, 99],\n                [58, 155, 204, 100],\n                [57, 157, 204, 102],\n                [57, 160, 204, 103],\n                [56, 162, 204, 105],\n                [56, 164, 204, 106],\n                [55, 167, 204, 108],\n                [55, 169, 204, 109],\n                [54, 172, 204, 110],\n                [54, 174, 204, 112],\n                [53, 177, 204, 113],\n                [53, 180, 204, 115],\n                [52, 182, 204, 116],\n                [52, 185, 204, 117],\n                [51, 187, 204, 119],\n                [51, 190, 204, 120],\n                [50, 193, 204, 122],\n                [50, 195, 204, 123],\n                [49, 198, 204, 124],\n                [49, 201, 204, 126],\n                [48, 204, 204, 127],\n                [48, 204, 201, 128],\n                [48, 204, 198, 130],\n                [47, 204, 195, 131],\n                [47, 204, 192, 132],\n                [46, 204, 190, 134],\n                [46, 204, 187, 135],\n                [45, 204, 184, 136],\n                [45, 204, 181, 138],\n                [45, 204, 178, 139],\n                [44, 204, 175, 140],\n                [44, 204, 172, 142],\n                [43, 204, 170, 143],\n                [43, 204, 167, 144],\n                [42, 204, 164, 146],\n                [42, 204, 161, 147],\n                [42, 204, 158, 148],\n                [41, 204, 155, 149],\n                [41, 204, 152, 151],\n                [40, 204, 149, 152],\n                [40, 204, 146, 153],\n                [40, 204, 143, 154],\n                [39, 204, 140, 156],\n                [39, 204, 137, 157],\n                [39, 204, 134, 158],\n                [38, 204, 131, 159],\n                [38, 204, 127, 161],\n                [37, 204, 124, 162],\n                [37, 204, 121, 163],\n                [37, 204, 118, 164],\n                [36, 204, 115, 165],\n                [36, 204, 112, 167],\n                [36, 204, 109, 168],\n                [35, 204, 106, 169],\n                [35, 204, 102, 170],\n                [35, 204, 99, 171],\n                [34, 204, 96, 172],\n                [34, 204, 93, 174],\n                [33, 204, 89, 175],\n                [33, 204, 86, 176],\n                [33, 204, 83, 177],\n                [32, 204, 80, 178],\n                [32, 204, 76, 179],\n                [32, 204, 73, 180],\n                [31, 204, 70, 181],\n                [31, 204, 67, 183],\n                [31, 204, 63, 184],\n                [30, 204, 60, 185],\n                [30, 204, 57, 186],\n                [30, 204, 53, 187],\n                [29, 204, 50, 188],\n                [29, 204, 47, 189],\n                [29, 204, 43, 190],\n                [29, 204, 40, 191],\n                [28, 204, 36, 192],\n                [28, 204, 33, 193],\n                [28, 204, 30, 194],\n                [28, 204, 27, 195],\n                [31, 204, 27, 196],\n                [34, 204, 27, 197],\n                [37, 204, 26, 198],\n                [40, 204, 26, 199],\n                [42, 204, 26, 200],\n                [45, 204, 25, 201],\n                [48, 204, 25, 202],\n                [51, 204, 25, 203],\n                [54, 204, 25, 204],\n                [57, 204, 24, 205],\n                [60, 204, 24, 206],\n                [63, 204, 24, 207],\n                [66, 204, 23, 208],\n                [69, 204, 23, 209],\n                [72, 204, 23, 209],\n                [75, 204, 23, 210],\n                [78, 204, 22, 211],\n                [81, 204, 22, 212],\n                [84, 204, 22, 213],\n                [87, 204, 21, 214],\n                [90, 204, 21, 215],\n                [93, 204, 21, 215],\n                [96, 204, 21, 216],\n                [99, 204, 20, 217],\n                [102, 204, 20, 218],\n                [105, 204, 20, 219],\n                [108, 204, 19, 220],\n                [111, 204, 19, 220],\n                [114, 204, 19, 221],\n                [118, 204, 19, 222],\n                [121, 204, 18, 223],\n                [124, 204, 18, 223],\n                [127, 204, 18, 224],\n                [130, 204, 18, 225],\n                [133, 204, 17, 226],\n                [137, 204, 17, 226],\n                [140, 204, 17, 227],\n                [143, 204, 17, 228],\n                [146, 204, 16, 228],\n                [149, 204, 16, 229],\n                [153, 204, 16, 230],\n                [156, 204, 15, 230],\n                [159, 204, 15, 231],\n                [162, 204, 15, 232],\n                [166, 204, 15, 232],\n                [169, 204, 14, 233],\n                [172, 204, 14, 234],\n                [176, 204, 14, 234],\n                [179, 204, 14, 235],\n                [182, 204, 13, 236],\n                [186, 204, 13, 236],\n                [189, 204, 13, 237],\n                [192, 204, 13, 237],\n                [196, 204, 12, 238],\n                [199, 204, 12, 238],\n                [202, 204, 12, 239],\n                [204, 201, 12, 239],\n                [204, 198, 12, 240],\n                [204, 194, 11, 241],\n                [204, 191, 11, 241],\n                [204, 188, 11, 242],\n                [204, 184, 11, 242],\n                [204, 181, 10, 243],\n                [204, 177, 10, 243],\n                [204, 174, 10, 243],\n                [204, 170, 10, 244],\n                [204, 167, 9, 244],\n                [204, 163, 9, 245],\n                [204, 160, 9, 245],\n                [204, 157, 9, 246],\n                [204, 153, 8, 246],\n                [204, 150, 8, 246],\n                [204, 146, 8, 247],\n                [204, 142, 8, 247],\n                [204, 139, 8, 248],\n                [204, 135, 7, 248],\n                [204, 132, 7, 248],\n                [204, 128, 7, 249],\n                [204, 125, 7, 249],\n                [204, 121, 6, 249],\n                [204, 118, 6, 250],\n                [204, 114, 6, 250],\n                [204, 110, 6, 250],\n                [204, 107, 6, 250],\n                [204, 103, 5, 251],\n                [204, 100, 5, 251],\n                [204, 96, 5, 251],\n                [204, 92, 5, 251],\n                [204, 89, 4, 252],\n                [204, 85, 4, 252],\n                [204, 81, 4, 252],\n                [204, 78, 4, 252],\n                [204, 74, 4, 253],\n                [204, 70, 3, 253],\n                [204, 67, 3, 253],\n                [204, 63, 3, 253],\n                [204, 59, 3, 253],\n                [204, 56, 3, 253],\n                [204, 52, 2, 254],\n                [204, 48, 2, 254],\n                [204, 45, 2, 254],\n                [204, 41, 2, 254],\n                [204, 37, 2, 254],\n                [204, 33, 1, 254],\n                [204, 30, 1, 254],\n                [204, 26, 1, 254],\n                [204, 22, 1, 254],\n                [204, 18, 1, 254],\n                [204, 15, 0, 254],\n                [204, 11, 0, 254],\n                [204, 7, 0, 254],\n                [204, 3, 0, 254],\n                [204, 0, 0, 255]\n            ];\n        }\n        else {\n            // New Lung -- 255 colors + 1 black color added at start\n            this.colMap = [\n                [0, 0, 0, 255],\n                [255, 255, 255, 0],\n                [221, 191, 255, 3],\n                [214, 179, 255, 6],\n                [208, 171, 255, 9],\n                [203, 164, 255, 11],\n                [198, 159, 254, 14],\n                [194, 155, 254, 16],\n                [190, 151, 254, 18],\n                [186, 147, 254, 21],\n                [182, 144, 254, 23],\n                [178, 141, 254, 25],\n                [174, 138, 254, 27],\n                [170, 136, 254, 29],\n                [166, 133, 254, 31],\n                [162, 131, 254, 33],\n                [158, 129, 254, 35],\n                [155, 127, 254, 37],\n                [151, 125, 254, 39],\n                [147, 123, 254, 41],\n                [143, 121, 254, 43],\n                [139, 120, 254, 45],\n                [136, 118, 254, 47],\n                [132, 116, 254, 49],\n                [128, 115, 254, 51],\n                [124, 113, 254, 53],\n                [120, 112, 254, 55],\n                [116, 110, 254, 57],\n                [112, 109, 254, 58],\n                [109, 108, 254, 60],\n                [106, 108, 254, 62],\n                [105, 110, 254, 64],\n                [104, 111, 254, 66],\n                [103, 113, 254, 67],\n                [102, 114, 254, 69],\n                [100, 116, 254, 71],\n                [99, 118, 254, 73],\n                [98, 119, 254, 74],\n                [97, 121, 254, 76],\n                [96, 123, 254, 78],\n                [95, 125, 254, 79],\n                [94, 127, 254, 81],\n                [93, 129, 254, 83],\n                [92, 131, 254, 84],\n                [91, 133, 254, 86],\n                [90, 136, 254, 88],\n                [89, 138, 254, 89],\n                [88, 140, 254, 91],\n                [87, 142, 254, 92],\n                [87, 145, 254, 94],\n                [86, 147, 254, 96],\n                [85, 150, 254, 97],\n                [84, 152, 254, 99],\n                [83, 155, 254, 100],\n                [82, 157, 254, 102],\n                [81, 160, 254, 103],\n                [81, 162, 254, 105],\n                [80, 165, 254, 107],\n                [79, 168, 254, 108],\n                [78, 170, 254, 110],\n                [78, 173, 254, 111],\n                [77, 176, 254, 113],\n                [76, 179, 254, 114],\n                [75, 182, 254, 115],\n                [75, 185, 254, 117],\n                [74, 187, 254, 118],\n                [73, 190, 254, 120],\n                [73, 193, 254, 121],\n                [72, 196, 254, 123],\n                [71, 199, 254, 124],\n                [70, 202, 254, 126],\n                [70, 205, 254, 127],\n                [69, 208, 254, 128],\n                [69, 212, 254, 130],\n                [68, 215, 254, 131],\n                [67, 218, 254, 133],\n                [67, 221, 254, 134],\n                [66, 224, 254, 135],\n                [65, 227, 254, 137],\n                [65, 231, 254, 138],\n                [64, 234, 254, 139],\n                [64, 237, 254, 141],\n                [63, 240, 254, 142],\n                [62, 244, 254, 143],\n                [62, 247, 254, 145],\n                [61, 250, 254, 146],\n                [61, 254, 254, 147],\n                [60, 254, 250, 148],\n                [59, 254, 247, 150],\n                [59, 254, 243, 151],\n                [58, 254, 240, 152],\n                [58, 254, 236, 153],\n                [57, 253, 233, 155],\n                [57, 253, 229, 156],\n                [56, 253, 226, 157],\n                [56, 253, 222, 158],\n                [55, 253, 218, 160],\n                [54, 253, 215, 161],\n                [54, 253, 211, 162],\n                [53, 253, 207, 163],\n                [53, 253, 204, 164],\n                [52, 253, 200, 165],\n                [52, 253, 196, 167],\n                [51, 253, 192, 168],\n                [51, 253, 189, 169],\n                [50, 253, 185, 170],\n                [50, 253, 181, 171],\n                [49, 253, 177, 172],\n                [49, 253, 173, 173],\n                [48, 252, 170, 175],\n                [48, 252, 166, 176],\n                [47, 252, 162, 177],\n                [47, 252, 158, 178],\n                [46, 252, 154, 179],\n                [46, 252, 150, 180],\n                [46, 252, 146, 181],\n                [45, 252, 142, 182],\n                [45, 252, 138, 183],\n                [44, 252, 134, 184],\n                [44, 252, 131, 185],\n                [43, 251, 127, 186],\n                [43, 251, 123, 187],\n                [42, 251, 119, 188],\n                [42, 251, 114, 189],\n                [41, 251, 110, 190],\n                [41, 251, 106, 191],\n                [41, 251, 102, 192],\n                [40, 251, 98, 193],\n                [40, 251, 94, 194],\n                [39, 250, 90, 195],\n                [39, 250, 86, 196],\n                [38, 250, 82, 197],\n                [38, 250, 78, 198],\n                [38, 250, 74, 199],\n                [37, 250, 70, 200],\n                [37, 250, 65, 201],\n                [36, 249, 61, 202],\n                [36, 249, 57, 202],\n                [35, 249, 53, 203],\n                [35, 249, 49, 204],\n                [35, 249, 45, 205],\n                [34, 249, 41, 206],\n                [34, 249, 36, 207],\n                [35, 248, 33, 208],\n                [38, 248, 33, 208],\n                [41, 248, 33, 209],\n                [45, 248, 32, 210],\n                [48, 248, 32, 211],\n                [52, 247, 31, 212],\n                [55, 247, 31, 213],\n                [59, 247, 31, 213],\n                [62, 247, 30, 214],\n                [66, 247, 30, 215],\n                [69, 246, 29, 216],\n                [73, 246, 29, 216],\n                [76, 246, 29, 217],\n                [79, 246, 28, 218],\n                [83, 246, 28, 219],\n                [86, 245, 28, 219],\n                [90, 245, 27, 220],\n                [94, 245, 27, 221],\n                [97, 245, 26, 222],\n                [101, 244, 26, 222],\n                [104, 244, 26, 223],\n                [108, 244, 25, 224],\n                [111, 244, 25, 224],\n                [115, 243, 25, 225],\n                [118, 243, 24, 226],\n                [122, 243, 24, 226],\n                [125, 242, 24, 227],\n                [129, 242, 23, 228],\n                [132, 242, 23, 228],\n                [136, 242, 23, 229],\n                [139, 241, 22, 229],\n                [143, 241, 22, 230],\n                [147, 241, 21, 231],\n                [150, 240, 21, 231],\n                [154, 240, 21, 232],\n                [157, 240, 20, 232],\n                [161, 239, 20, 233],\n                [164, 239, 20, 234],\n                [168, 239, 19, 234],\n                [171, 238, 19, 235],\n                [175, 238, 19, 235],\n                [178, 238, 18, 236],\n                [182, 237, 18, 236],\n                [185, 237, 18, 237],\n                [189, 236, 17, 237],\n                [192, 236, 17, 238],\n                [196, 236, 17, 238],\n                [199, 235, 17, 239],\n                [203, 235, 16, 239],\n                [206, 234, 16, 240],\n                [210, 234, 16, 240],\n                [213, 234, 15, 241],\n                [216, 233, 15, 241],\n                [220, 233, 15, 242],\n                [223, 232, 14, 242],\n                [227, 232, 14, 242],\n                [230, 231, 14, 243],\n                [231, 228, 13, 243],\n                [230, 224, 13, 244],\n                [230, 220, 13, 244],\n                [229, 215, 13, 244],\n                [229, 211, 12, 245],\n                [228, 207, 12, 245],\n                [228, 202, 12, 246],\n                [227, 198, 11, 246],\n                [227, 194, 11, 246],\n                [226, 190, 11, 247],\n                [226, 185, 10, 247],\n                [225, 181, 10, 247],\n                [225, 177, 10, 248],\n                [224, 172, 10, 248],\n                [223, 168, 9, 248],\n                [223, 164, 9, 248],\n                [222, 159, 9, 249],\n                [222, 155, 9, 249],\n                [221, 151, 8, 249],\n                [220, 147, 8, 250],\n                [220, 142, 8, 250],\n                [219, 138, 7, 250],\n                [219, 134, 7, 250],\n                [218, 130, 7, 251],\n                [217, 126, 7, 251],\n                [217, 121, 6, 251],\n                [216, 117, 6, 251],\n                [215, 113, 6, 252],\n                [214, 109, 6, 252],\n                [214, 105, 5, 252],\n                [213, 101, 5, 252],\n                [212, 96, 5, 252],\n                [212, 92, 5, 252],\n                [211, 88, 4, 253],\n                [210, 84, 4, 253],\n                [209, 80, 4, 253],\n                [209, 76, 4, 253],\n                [208, 72, 3, 253],\n                [207, 68, 3, 253],\n                [206, 64, 3, 253],\n                [205, 60, 3, 254],\n                [204, 56, 3, 254],\n                [204, 52, 2, 254],\n                [203, 48, 2, 254],\n                [202, 44, 2, 254],\n                [201, 40, 2, 254],\n                [200, 37, 1, 254],\n                [199, 33, 1, 254],\n                [198, 29, 1, 254],\n                [197, 25, 1, 254],\n                [197, 21, 1, 254],\n                [196, 18, 0, 254],\n                [195, 14, 0, 254],\n                [194, 10, 0, 254],\n                [193, 7, 0, 254],\n                [192, 3, 0, 254],\n                [191, 0, 0, 255]\n            ];\n        }\n        // OLD - 221 colors\n        // this.colMap = [\n        //     [0, 0, 0, 255], [0, 0, 131, 255], [0, 0, 135, 255], [0, 0, 139, 255],\n        //     [0, 0, 143, 255], [0, 0, 147, 255], [0, 0, 151, 255], [0, 0, 155, 255],\n        //     [0, 0, 159, 255], [0, 0, 163, 255], [0, 0, 167, 255], [0, 0, 171, 255],\n        //     [0, 0, 175, 255], [0, 0, 179, 255], [0, 0, 183, 255], [0, 0, 187, 255],\n        //     [0, 0, 191, 255], [0, 0, 195, 255], [0, 0, 199, 255], [0, 0, 203, 255],\n        //     [0, 0, 207, 255], [0, 0, 211, 255], [0, 0, 215, 255], [0, 0, 219, 255],\n        //     [0, 0, 223, 255], [0, 0, 227, 255], [0, 0, 231, 255], [0, 0, 235, 255],\n        //     [0, 0, 239, 255], [0, 0, 243, 255], [0, 0, 247, 255], [0, 0, 251, 255],\n        //     [0, 0, 255, 255], [0, 4, 255, 255], [0, 8, 255, 255], [0, 12, 255, 255],\n        //     [0, 16, 255, 255], [0, 20, 255, 255], [0, 24, 255, 255], [0, 28, 255, 255],\n        //     [0, 32, 255, 255], [0, 36, 255, 255], [0, 40, 255, 255], [0, 44, 255, 255],\n        //     [0, 48, 255, 255], [0, 52, 255, 255], [0, 56, 255, 255], [0, 60, 255, 255],\n        //     [0, 64, 255, 255], [0, 68, 255, 255], [0, 72, 255, 255], [0, 76, 255, 255],\n        //     [0, 80, 255, 255], [0, 84, 255, 255], [0, 88, 255, 255], [0, 92, 255, 255],\n        //     [0, 96, 255, 255], [0, 100, 255, 255], [0, 104, 255, 255], [0, 108, 255, 255],\n        //     [0, 112, 255, 255], [0, 116, 255, 255], [0, 120, 255, 255], [0, 124, 255, 255],\n        //     [0, 128, 255, 255], [0, 131, 255, 255], [0, 135, 255, 255], [0, 139, 255, 255],\n        //     [0, 143, 255, 255], [0, 147, 255, 255], [0, 151, 255, 255], [0, 155, 255, 255],\n        //     [0, 159, 255, 255], [0, 163, 255, 255], [0, 167, 255, 255], [0, 171, 255, 255],\n        //     [0, 175, 255, 255], [0, 179, 255, 255], [0, 183, 255, 255], [0, 187, 255, 255],\n        //     [0, 191, 255, 255], [0, 195, 255, 255], [0, 199, 255, 255], [0, 203, 255, 255],\n        //     [0, 207, 255, 255], [0, 211, 255, 255], [0, 215, 255, 255], [0, 219, 255, 255],\n        //     [0, 223, 255, 255], [0, 227, 255, 255], [0, 231, 255, 255], [0, 235, 255, 255],\n        //     [0, 239, 255, 255], [0, 243, 255, 255], [0, 247, 255, 255], [0, 251, 255, 255],\n        //     [0, 255, 255, 255], [4, 255, 251, 255], [8, 255, 247, 255], [12, 255, 243, 255],\n        //     [16, 255, 239, 255], [20, 255, 235, 255], [24, 255, 231, 255], [28, 255, 227, 255],\n        //     [32, 255, 223, 255], [36, 255, 219, 255], [40, 255, 215, 255], [44, 255, 211, 255],\n        //     [48, 255, 207, 255], [52, 255, 203, 255], [56, 255, 199, 255], [60, 255, 195, 255],\n        //     [64, 255, 191, 255], [68, 255, 187, 255], [72, 255, 183, 255], [76, 255, 179, 255],\n        //     [80, 255, 175, 255], [84, 255, 171, 255], [88, 255, 167, 255], [92, 255, 163, 255],\n        //     [96, 255, 159, 255], [100, 255, 155, 255], [104, 255, 151, 255], [108, 255, 147, 255],\n        //     [112, 255, 143, 255], [116, 255, 139, 255], [120, 255, 135, 255], [124, 255, 131, 255],\n        //     [128, 255, 128, 255], [131, 255, 124, 255], [135, 255, 120, 255], [139, 255, 116, 255],\n        //     [143, 255, 112, 255], [147, 255, 108, 255], [151, 255, 104, 255], [155, 255, 100, 255],\n        //     [159, 255, 96, 255], [163, 255, 92, 255], [167, 255, 88, 255], [171, 255, 84, 255],\n        //     [175, 255, 80, 255], [179, 255, 76, 255], [183, 255, 72, 255], [187, 255, 68, 255],\n        //     [191, 255, 64, 255], [195, 255, 60, 255], [199, 255, 56, 255], [203, 255, 52, 255],\n        //     [207, 255, 48, 255], [211, 255, 44, 255], [215, 255, 40, 255], [219, 255, 36, 255],\n        //     [223, 255, 32, 255], [227, 255, 28, 255], [231, 255, 24, 255], [235, 255, 20, 255],\n        //     [239, 255, 16, 255], [243, 255, 12, 255], [247, 255, 8, 255], [251, 255, 4, 255],\n        //     [255, 255, 0, 255], [255, 251, 0, 255], [255, 247, 0, 255], [255, 243, 0, 255],\n        //     [255, 239, 0, 255], [255, 235, 0, 255], [255, 231, 0, 255], [255, 227, 0, 255],\n        //     [255, 223, 0, 255], [255, 219, 0, 255], [255, 215, 0, 255], [255, 211, 0, 255],\n        //     [255, 207, 0, 255], [255, 203, 0, 255], [255, 199, 0, 255], [255, 195, 0, 255],\n        //     [255, 191, 0, 255], [255, 187, 0, 255], [255, 183, 0, 255], [255, 179, 0, 255],\n        //     [255, 175, 0, 255], [255, 171, 0, 255], [255, 167, 0, 255], [255, 163, 0, 255],\n        //     [255, 159, 0, 255], [255, 155, 0, 255], [255, 151, 0, 255], [255, 147, 0, 255],\n        //     [255, 143, 0, 255], [255, 139, 0, 255], [255, 135, 0, 255], [255, 131, 0, 255],\n        //     [255, 128, 0, 255], [255, 124, 0, 255], [255, 120, 0, 255], [255, 116, 0, 255],\n        //     [255, 112, 0, 255], [255, 108, 0, 255], [255, 104, 0, 255], [255, 100, 0, 255],\n        //     [255, 96, 0, 255], [255, 92, 0, 255], [255, 88, 0, 255], [255, 84, 0, 255],\n        //     [255, 80, 0, 255], [255, 76, 0, 255], [255, 72, 0, 255], [255, 68, 0, 255],\n        //     [255, 64, 0, 255], [255, 60, 0, 255], [255, 56, 0, 255], [255, 52, 0, 255],\n        //     [255, 48, 0, 255], [255, 44, 0, 255], [255, 40, 0, 255], [255, 36, 0, 255],\n        //     [255, 32, 0, 255], [255, 28, 0, 255], [255, 24, 0, 255], [255, 20, 0, 255],\n        //     [255, 16, 0, 255], [255, 12, 0, 255], [255, 8, 0, 255], [255, 4, 0, 255],\n        //     [0, 0, 0, 0]\n        // ];\n    };\n    StethIOSpectrogram.prototype.incrLine = function () {\n        this.nextLine++;\n        if (this.nextLine >= this.lines) {\n            this.nextLine = 0;\n        }\n    };\n    StethIOSpectrogram.prototype.updateWaterfall = function () {\n        // grab latest line of data, write it to off screen buffer, inc 'nextLine'\n        var minMax = this.getDataOrganized();\n        this.horizontalNewLine();\n        // Get processing mode from localstorage\n        var mode = localStorage.getItem('processingMode');\n        // Draw sound line if heart mode\n        if ((!mode && this.heartMode) || mode === 'HEART') {\n            this.drawSoundLine(minMax);\n        }\n        // loop to write data data at the desired rate, data is being updated asynchronously\n        // ref for accurate timeout: http://www.sitepoint.com/creating-accurate-timers-in-javascript\n        this.sgTime += this.interval;\n        var sgDiff = (Date.now() - this.sgStartTime) - this.sgTime;\n        if (this.running) {\n            var self_1 = this;\n            this.timerID = setTimeout(function () {\n                self_1.updateWaterfall();\n            }, this.interval - sgDiff);\n        }\n    };\n    StethIOSpectrogram.prototype.getDataOrganized = function () {\n        this.spectogramDrawer.analyserNode.getFloatFrequencyData(this.spectogramDrawer.floatFreqData); // negative numbers, -40 is louder than -100\n        // console.log(this.spectogramDrawer.floatFreqData);\n        // add in the audio line\n        var minMax = this.spectogramDrawer.getMaxMinPosition();\n        this.spectogramDrawer.doGainAdjust();\n        this.spectogramDrawer.convertToByteFrequencyData();\n        this.spectogramDrawer.adjustVerticalScaleByteBuffer();\n        return minMax;\n    };\n    /* Adding the audio lines\n    *  @params minMax = Array of two values 0 - max and 1 - min\n    */\n    StethIOSpectrogram.prototype.drawSoundLine = function (minMax) {\n        // we want the line above the heat map  mostly\n        var range = this.spectogramDrawer.targetWidth / 3; //this.spectogramDrawer.targetWidth * 2\n        var offset = this.spectogramDrawer.targetHeight / 3; // Divide by 4 because the line graph need to start at 1/4th of the screen\n        var start = offset - minMax[0] * range;\n        var end = offset - minMax[1] * range;\n        if (end - start < 1.0) { // draw single pixel if there is no sound\n            end = start + 1;\n        }\n        // TODO: Dose work but its more like adjusting after wrong frequency calibaration. Then best to calibarate before itself.\n        // Adding variation to the peaks\n        // if(this.prevStart == start) {\n        //     start += 10;\n        // } else {\n        //     this.prevStart = start;\n        // }\n        // if(this.prevEnd == end) {\n        //     end -= 10;\n        // } else {\n        //     this.prevEnd = end;\n        // }\n        // draw new line segment\n        var saved = this.offScreenCtx.globalCompositeOperation;\n        this.offScreenCtx.globalCompositeOperation = 'source-over';\n        this.offScreenCtx.beginPath();\n        this.offScreenCtx.translate(0.5, 0);\n        this.offScreenCtx.moveTo(1, start); // Change to 2 if using in RPM\n        this.offScreenCtx.lineTo(1, end); // Change to 2 if using in RPM\n        this.offScreenCtx.stroke();\n        this.offScreenCtx.globalCompositeOperation = saved;\n        this.offScreenCtx.resetTransform();\n    };\n    StethIOSpectrogram.prototype.sgSetLineRate = function (newRate) {\n        if (isNaN(newRate) || newRate > 50 || newRate < 0) {\n            console.error('invalid line rate [0 <= lineRate < 50 lines/sec]');\n            // don't change the lineRate;\n        }\n        else if (newRate === 0) {\n            this.lineRate = 0;\n        }\n        else {\n            this.lineRate = newRate;\n            this.interval = 1000 / this.lineRate; // msec\n        }\n    };\n    StethIOSpectrogram.prototype.setProperty = function (propertyName, value) {\n        if ((typeof propertyName !== 'string') || (value === undefined)) {\n            return;\n        }\n        switch (propertyName.toLowerCase()) {\n            case 'linerate':\n                this.sgSetLineRate(value); // setLine does checks for number etc\n                break;\n            case 'startbin':\n                if (!isNaN(value) && value > 0) {\n                    this.startOfs = value;\n                }\n                break;\n            case 'onscreenparentid':\n                if (typeof value === 'string' && document.getElementById(value)) {\n                    this.demoCvsId = value;\n                }\n                break;\n            case 'colormap':\n                if (Array.isArray(value) && Array.isArray(value[0]) && value[0].length == 4) {\n                    this.colMap = value; // value must be an array of 4 element arrays to get here\n                    if (this.colMap.length < 256) {\n                        for (var i = this.colMap.length; i < 256; i++) {\n                            this.colMap[i] = this.colMap[this.colMap.length - 1];\n                        }\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    /* Creates new lines so the canvas can proceed (only heat map) */\n    StethIOSpectrogram.prototype.horizontalNewLine = function () {\n        var tmpImgData, ipBuf8;\n        if (this.ipBufAry[0].constructor !== Uint8Array) {\n            ipBuf8 = Uint8ClampedArray.from(this.ipBufAry[0]); // clamp input values to 0..255 range\n        }\n        else {\n            ipBuf8 = this.ipBufAry[0]; // conversion already done\n        }\n        this.offScreenCtx.globalCompositeOperation = 'copy';\n        this.offScreenCtx.imageSmoothingEnabled = false;\n        this.offScreenCtx.drawImage(this.offScreenCtx.canvas, 1, 0); // Change the 2,0 ro change the direction of graph flow\n        this.offScreenCtx.globalCompositeOperation = 'source-over';\n        for (var offset = 0, sigVal = void 0, rgba = void 0, opIdx = void 0, ipIdx = 0; ipIdx < this.lines; ipIdx++) {\n            sigVal = ipBuf8[ipIdx - 50] || 0; // if input line too short add zeros\n            rgba = this.colMap[sigVal]; // array of rgba values\n            // console.log(\"Signal values: \", sigVal);\n            // console.log(\"rgba values: \", rgba);\n            // Add color map\n            this.addReplaceColorMap(rgba, ipIdx, offset);\n            // Add color to next line as well to increase the color map -- Not working and breaks the graph\n            // if(sigVal !== 0) {\n            //     offset++;\n            //     // Add color map\n            //     this.addReplaceColorMap(rgba, ipIdx, offset);\n            // }\n        }\n        this.offScreenCtx.putImageData(this.vertLineImgData, 1, this.nextLine);\n    };\n    StethIOSpectrogram.prototype.addReplaceColorMap = function (rgba, ipIdx, offset) {\n        // byte reverse so number aa bb gg rr\n        // opIdx = this.lines*4 - 4*ipIdx;\n        var opIdx = (4 * ((this.lines - 1) - ipIdx)) + offset;\n        this.vertLineBuf8[opIdx] = rgba[0]; // red\n        this.vertLineBuf8[opIdx + 1] = rgba[1]; // green\n        this.vertLineBuf8[opIdx + 2] = rgba[2]; // blue\n        // If lung mode then resuce the alpha value (Alpha represent the tranparency of the color)\n        var mode = localStorage.getItem('processingMode');\n        if (mode === 'LUNG') {\n            this.vertLineBuf8[opIdx + 3] = 85; // alpha\n        }\n        else {\n            this.vertLineBuf8[opIdx + 3] = rgba[3]; // alpha\n        }\n        // if(mode === 'HEART' && sigVal < 100) {\n        //     this.vertLineBuf8[opIdx] = this.colMap[0][0];   // red\n        //     this.vertLineBuf8[opIdx + 1] = this.colMap[0][1]; // green\n        //     this.vertLineBuf8[opIdx + 2] = this.colMap[0][2]; // blue\n        //     this.vertLineBuf8[opIdx + 3] = this.colMap[0][3]; // alpha\n        // }\n        // TODO: below line will check if the range of lung sounds color map\n        // if(this.vertLineBuf8[opIdx] > 0 && this.vertLineBuf8[opIdx+1] > 0 && this.vertLineBuf8[opIdx+2] > 0 && this.vertLineBuf8[opIdx+3] > 0) {\n        //     console.log(\"Color map not empty\");\n        // }\n    };\n    StethIOSpectrogram.prototype.clear = function () {\n        this.offScreenCtx.putImageData(this.clearImgData, 0, 0);\n    };\n    StethIOSpectrogram.prototype.start = function () {\n        this.sgStartTime = Date.now();\n        this.sgTime = 0;\n        this.running = true;\n        this.updateWaterfall(); // start the update loop\n    };\n    StethIOSpectrogram.prototype.stop = function () {\n        this.running = false;\n        if (this.timerID) {\n            clearTimeout(this.timerID);\n        }\n        // reset where the next line is to be written\n        this.nextLine = 0;\n    };\n    return StethIOSpectrogram;\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["Object","defineProperty","exports","value","AudioDecoder","path","this","worker","Worker","prototype","setup","cfg","packets","console","log","_this","transfer_list","i","length","push","data","Promise","resolve","reject","onmessage","ev","status","postMessage","config","decode","packet","AudioEncoder","encode","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","audio_decoder_1","audio_encoder_1","spectrogram_1","AudioEngine","divID","lowAudioFlag","filterFunctions","decodedPackets","kAudioFrequencyExact","importObject","imports","imported_func","arg","wasi_unstable","audioInput","arrayBuffer","heartMode","totalBytesIn","byteLength","decoder","decoderOperational","packetsToDecode","loadOpusDecoder","info","decodePackets","testAudioInput","socketWorkletNode","port","type","samples","gain","localStorage","getItem","handleWorkletProcessorMessage","event","outputs","old_handleWorkletProcessorMessage","feedbackGain","buffersToEncode","queueBufferForEncodingAndSend","audioContext","micStream","micSourceNode","encoder","totalSamplesIn","totalBytesSent","decodingPackets","encodingBuffers","analyser","analyserBufferSize","analyserData","refreshTimer","startIt","liveInput","_a","AudioContext","sampleRate","initiliseFilter","biquadFilter","createBiquadFilter","distortion","createWaveShaper","gainNode","createGain","convolver","createConvolver","audioWorklet","addModule","onModuleAdded","audioType","pause","spectrogramDrawer","haltDisplay","state","JSON","stringify","newAudioFilter","resume","close","_i","getTracks","stop","clearInterval","constraints","_b","audio","echoCancellation","googEchoCancellation","exact","channelCount","autoGainControl","noiseSuppression","loadOpusEncoder","navigator","mediaDevices","getUserMedia","createMediaStreamSource","AudioWorkletNode","connect","destination","SpectrogramDrawer","beginDisplay","analyserNode","connectHeartBiquad","single","frequency","Q","biquadFilter1","biquadFilter2","biquadFilter3","biquadFilter4","biquadFilter5","biquadFilter6","biquadFilter7","biquadFilter8","connectLungBiquad","noiseGateNode","enc_cfg","sampling_rate","num_of_channels","params","application","frame_duration","channels","allSamples","buffer","err_1","shift","timestamp","transferable","buf","catch","err","setUpFeedbackAnalyser","createAnalyser","fftSize","Float32Array","frequencyBinCount","setInterval","refreshAnalyserData","getFloatFrequencyData","kBinLow","kBinMid","powerAtLow","numAtLow","powerAtMid","numAtMid","powerAtHigh","numAtHigh","setInputEnabled","getAudioTracks","enabled","setAudioBuffer","audioBuffer","getChannelData","addAudioSamples","resampleAudio","int16SamplesAt3000Hz","parseBiquadFilter","puckJson","forEach","item","name","filter","addFilter","filterModel","a0","a1","a2","b1","b2","refa0","refa1","refa2","refb1","refb2","coeffs","decodedFilter","freq","q","width","calculateQFromOctaveWidth","calculateBiquadPeak","calculateLP2","calculateHP2","calculateBW4Section","calculateBP2","Math","abs","concat","glsteth_filter_addBiquad","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","hasOwnProperty","context","drawOnScreen","canvasContextXX","imageSmoothingEnabled","drawImage","wf","offScreenCvs","playing","requestAnimationFrame","smoothingTimeConstant","frqBuf","Uint8Array","floatFreqData","floatTimeData","wfNumPts","wfBufAry","canvas","document","getElementById","targetRect","getBoundingClientRect","targetWidth","floor","targetHeight","height","StethIOSpectrogram","desiredMaxDB","getContext","resetTransform","doGainAdjust","max","min","instaGain","convertToByteFrequencyData","scale","soundLevel","byteVal","pow","getCursorPosition","getFloatTimeDomainData","sum","getMaxMinPosition","val","adjustVerticalScaleByteBuffer","half","low","round","mid","high","start","resumeDisplay","ipBufAry","w","h","options","drawer","opt","offScreenCtx","pxPerLine","lines","lineRate","interval","startOfs","spectogramDrawer","vertLineBuf","ArrayBuffer","parseInt","vertLineBuf8","Uint8ClampedArray","vertLineImgData","ImageData","ipBuf8","clearBuf","clearBuf8","buildColourMap","colMap","prop","clearImgData","nextLine","timerID","running","sgTime","sgStartTime","demoCvsId","setProperty","createElement","setAttribute","toString","strokeStyle","lineWidth","appendChild","mode","incrLine","updateWaterfall","minMax","getDataOrganized","horizontalNewLine","drawSoundLine","sgDiff","Date","now","self_1","setTimeout","range","offset","end","saved","globalCompositeOperation","beginPath","translate","moveTo","lineTo","stroke","sgSetLineRate","newRate","isNaN","error","propertyName","toLowerCase","Array","isArray","constructor","from","sigVal","rgba","ipIdx","addReplaceColorMap","putImageData","opIdx","clear","clearTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}